[{
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1003,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct Command<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 106
          },
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 79
          }
        ],
        "key.bodylength" : 872,
        "key.bodyoffset" : 129,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Command<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 889,
        "key.name" : "Command",
        "key.namelength" : 7,
        "key.nameoffset" : 120,
        "key.offset" : 113,
        "key.parsed_declaration" : "public struct Command",
        "key.parsed_scope.end" : 42,
        "key.parsed_scope.start" : 9,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.Arguments = [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 132
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<decl.name>Arguments<\/decl.name> = [<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 30,
            "key.name" : "Arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 149,
            "key.offset" : 139,
            "key.parsed_declaration" : "public typealias Arguments = [String]",
            "key.parsed_scope.end" : 10,
            "key.parsed_scope.start" : 10,
            "key.typename" : "[String].Type",
            "key.typeusr" : "$sSaySSGmD",
            "key.usr" : "s:8ShellKit7CommandV9Argumentsa"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public typealias <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.Environment = [<Type usr=\"s:SS\">String<\/Type> : <Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 172
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<decl.name>Environment<\/decl.name> = [<ref.struct usr=\"s:SS\">String<\/ref.struct> : <ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" :40,
            "key.name" : "Environment",
            "key.namelength" : 11,
            "key.nameoffset" : 189,
            "key.offset" : 179,
            "key.parsed_declaration" : "public typealias Environment = [String: String]",
            "key.parsed_scope.end" : 11,
            "key.parsed_scope.start" : 11,
            "key.typename" : "[String : String].Type",
            "key.typeusr" : "$sSDyS2SGmD",
            "key.usr" : "s:8ShellKit7CommandV11Environmenta"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let name: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 223
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>name<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.name" : "name",
            "key.namelength" : 4,
            "key.nameoffset" : 234,
            "key.offset" : 230,
            "key.parsed_declaration" : "public let name: String",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:8ShellKit7CommandV4nameSSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let arguments: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV9Argumentsa\">Arguments<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 249
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>arguments<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV9Argumentsa\">Arguments<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 32,
            "key.name" : "arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 260,
            "key.offset" : 256,
            "key.parsed_declaration" : "public let arguments: Command.Arguments",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.typename" : "[String]",
            "key.typeusr" : "$sSaySSGD",
            "key.usr" : "s:8ShellKit7CommandV9argumentsSaySSGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 291
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>environment<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 36,
            "key.name" : "environment",
            "key.namelength" : 11,
            "key.nameoffset" : 302,
            "key.offset" : 298,
            "key.parsed_declaration" : "public let environment: Command.Environment",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.typename" : "[String : String]",
            "key.typeusr" : "$sSDyS2SGD",
            "key.usr" : "s:8ShellKit7CommandV11environmentSDyS2SGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let workingDirectory: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 337
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>workingDirectory<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 28,
            "key.name" : "workingDirectory",
            "key.namelength" : 16,
            "key.nameoffset" : 348,
            "key.offset" : 344,
            "key.parsed_declaration" : "public let workingDirectory: String",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 16,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:8ShellKit7CommandV16workingDirectorySSvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let outLog: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 375
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>outLog<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.name" : "outLog",
            "key.namelength" : 6,
            "key.nameoffset" : 386,
            "key.offset" : 382,
            "key.parsed_declaration" : "public let outLog: Bool",
            "key.parsed_scope.end" : 17,
            "key.parsed_scope.start" : 17,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:8ShellKit7CommandV6outLogSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let errLog: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 401
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>errLog<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 16,
            "key.name" : "errLog",
            "key.namelength" : 6,
            "key.nameoffset" : 412,
            "key.offset" : 408,
            "key.parsed_declaration" : "public let errLog: Bool",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:8ShellKit7CommandV6errLogSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 427
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>logLevel<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 22,
            "key.name" : "logLevel",
            "key.namelength" : 8,
            "key.nameoffset" : 438,
            "key.offset" : 434,
            "key.parsed_declaration" : "public let logLevel: LogLevel",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.typename" : "Shell.Reporter.Level",
            "key.typeusr" : "$s8ShellKit0A0C8ReporterC5LevelOD",
            "key.usr" : "s:8ShellKit7CommandV8logLevelAA0A0C8ReporterC0E0Ovp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>init(name: <Type usr=\"s:SS\">String<\/Type>, arguments: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV9Argumentsa\">Arguments<\/Type> = [], environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type> = [:], workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, outLog: <Type usr=\"s:Sb\">Bool<\/Type> = true, errLog: <Type usr=\"s:Sb\">Bool<\/Type> = true, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .off)<\/Declaration>",
            "key.bodylength" : 214,
            "key.bodyoffset" : 699,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>arguments<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV9Argumentsa\">Arguments<\/ref.typealias><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workingDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>outLog<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>errLog<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .off<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 454,
            "key.name" : "init(name:arguments:environment:workingDirectory:outLog:errLog:logLevel:)",
            "key.namelength" : 237,
            "key.nameoffset" : 460,
            "key.offset" : 460,
            "key.parsed_declaration" : "init(\n  name: String,\n  arguments: Command.Arguments = [],\n  environment: Command.Environment = [:],\n  workingDirectory: String = Shell.Path.cwd,\n  outLog: Bool = true,\n  errLog: Bool = true,\n  logLevel: LogLevel = .off\n)",
            "key.parsed_scope.end" : 37,
            "key.parsed_scope.start" : 21,
            "key.substructure" : [

            ],
            "key.typename" : "(Command.Type) -> (String, [String], [String : String], String, Bool, Bool, Shell.Reporter.Level) -> Command",
            "key.typeusr" : "$s4name9arguments11environment16workingDirectory6outLog03errG08logLevel8ShellKit7CommandVSS_SaySSGSDyS2SGSSS2bAH0K0C8ReporterC0J0OtcD",
            "key.usr" : "s:8ShellKit7CommandV4name9arguments11environment16workingDirectory6outLog03errJ08logLevelACSS_SaySSGSDyS2SGSSS2bAA0A0C8ReporterC0M0Otcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var nameAndArguments: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 51,
            "key.bodyoffset" : 948,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Command.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>nameAndArguments<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 82,
            "key.name" : "nameAndArguments",
            "key.namelength" : 16,
            "key.nameoffset" : 922,
            "key.offset" : 918,
            "key.parsed_declaration" : "var nameAndArguments: String",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 39,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:8ShellKit7CommandV16nameAndArgumentsSSvp"
          }
        ],
        "key.typename" : "Command.Type",
        "key.typeusr" : "$s8ShellKit7CommandVmD",
        "key.usr" : "s:8ShellKit7CommandV"
      }
    ]
  }
}, {
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Error.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 228,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public class Shell<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 80
          }
        ],
        "key.bodylength" : 102,
        "key.bodyoffset" : 124,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Shell<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 120,
        "key.name" : "Shell",
        "key.namelength" : 5,
        "key.nameoffset" : 117,
        "key.offset" : 107,
        "key.parsed_declaration" : "extension Shell",
        "key.parsed_scope.end" : 14,
        "key.parsed_scope.start" : 9,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum Error : Swift.<Type usr=\"s:s5ErrorP\">Error<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 127
              }
            ],
            "key.bodylength" : 65,
            "key.bodyoffset" : 159,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 11,
                "key.offset" : 146
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Error.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Error<\/decl.name> : Swift.<ref.protocol usr=\"s:s5ErrorP\">Error<\/ref.protocol><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Swift.Error"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 91,
            "key.name" : "Error",
            "key.namelength" : 5,
            "key.nameoffset" : 139,
            "key.offset" : 134,
            "key.parsed_declaration" : "public enum Error: Swift.Error",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 10,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 24,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 164,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case nonZeroExit(<Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Error.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>nonZeroExit<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 19,
                    "key.name" : "nonZeroExit(_:)",
                    "key.namelength" : 19,
                    "key.nameoffset" : 169,
                    "key.offset" : 169,
                    "key.parsed_declaration" : "case nonZeroExit(String)","key.parsed_scope.end" : 11,
                    "key.parsed_scope.start" : 11,
                    "key.typename" : "(Shell.Error.Type) -> (String) -> Shell.Error",
                    "key.typeusr" : "$sy8ShellKit0A0C5ErrorOSScAEmcD",
                    "key.usr" : "s:8ShellKit0A0C5ErrorO11nonZeroExityAESScAEmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 28,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 193,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case validationError(<Type usr=\"s:SS\">String<\/Type>)<\/Declaration>",
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Error.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>validationError<\/decl.name>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 23,
                    "key.name" : "validationError(_:)",
                    "key.namelength" : 23,
                    "key.nameoffset" : 198,
                    "key.offset" : 198,
                    "key.parsed_declaration" : "case validationError(String)",
                    "key.parsed_scope.end" : 12,
                    "key.parsed_scope.start" : 12,
                    "key.typename" : "(Shell.Error.Type) -> (String) -> Shell.Error",
                    "key.typeusr" : "$sy8ShellKit0A0C5ErrorOSScAEmcD",
                    "key.usr" : "s:8ShellKit0A0C5ErrorO010validationC0yAESScAEmF"
                  }
                ]
              }
            ],
            "key.typename" : "Shell.Error.Type",
            "key.typeusr" : "$s8ShellKit0A0C5ErrorOmD",
            "key.usr" : "s:8ShellKit0A0C5ErrorO"
          }
        ],
        "key.typename" : "Shell.Type",
        "key.typeusr" : "$s8ShellKit0A0CmD",
        "key.usr" : "s:8ShellKit0A0C"
      }
    ]
  }
}, {
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/File.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 238,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>@frozen struct String<\/Declaration>",
        "key.bodylength" : 139,
        "key.bodyoffset" : 97,
        "key.doc.declaration" : "struct String",
        "key.doc.discussion" : [
          {
            "Para" : "A string is a series of characters, such as `\"Swift\"`, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The `String` type bridges with the Objective-C class `NSString` and offers interoperability with C functions that works with strings."
          },
          {
            "Para" : "You can create new strings using string literals or string interpolations. A  is a series of characters enclosed in quotes."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : " are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Combine strings using the concatenation operator (`+`)."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Multiline string literals are enclosed in three double quotation marks (`\"\"\"`), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings always have value semantics. Modifying a copy of a string leaves the original unaffected."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Comparing strings for equality using the equal-to operator (`==`) or a relational operator (like `<` or `>=`) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The Unicode scalar value `\"\\u{301}\"` modifies the preceding character to include an accent, so `\"e\\u{301}\"` has the same canonical representation as the single Unicode scalar value `\"é\"`."
          },
          {
            "Para" : "Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in `Dictionary` instances and for other purposes."
          },
          {
            "Para" : "A string is a collection of , which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift `Character` type. Each element of a string is represented by a `Character` instance."
          },
          {
            "Para" : "For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of the string up to that point:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `firstName` constant is an instance of the `Substring` type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s `unicodeScalars`, `utf16`, or `utf8` properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding."
          },
          {
            "Para" : "To demonstrate the different views available for every string, the following examples use this `String` instance:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `cafe` string is a collection of the nine characters that are visible when the string is displayed."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `unicodeScalars` property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a `Unicode.Scalar` instance and is equivalent to a UTF-32 code unit."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The `unicodeScalars` view’s elements comprise each Unicode scalar value in the `cafe` string. In particular, because `cafe` was declared using the decomposed form of the `\"é\"` character, `unicodeScalars` contains the scalar values for both the letter `\"e\"` (101) and the accent character `\"´\"` (769)."
          },
          {
            "Para" : "A string’s `utf16` property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalarvalues. Each code unit is stored as a `UInt16` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf16` view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed `NSString` APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "A string’s `utf8` property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a `UInt8` instance."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The elements of the `utf8` view are the code units for the string when encoded in UTF-8. This representation matches the one used when `String` instances are passed to C APIs."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views."
          },
          {
            "Para" : "For example, an ASCII character like the capital letter  is represented by a single element in each of its four views. The Unicode scalar value of  is `65`, which is small enough to fit in a single code unit in both UTF-16 and UTF-8."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like `\"\\u{1F1F5}\"` and `\"\\u{1F1F7}\"`. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string `\"🇵🇷\"` reports a different length."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "To check whether a string is empty, use its `isEmpty` property instead of comparing the length of one of the views to `0`. Unlike with `isEmpty`, calculating a view’s `count` property requires iterating through the elements of the string."
          },
          {
            "Para" : "To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Strings and their views share indices, so you can access the UTF-8 view of the `name` string using the same `firstSpace` index."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Note that an index into one view may not have an exact corresponding position in another view. For example, the `flag` string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the `flag.utf8` view. Accessing the `utf8` view with these indices yields the first and second code UTF-8 units."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "When used to access the elements of the `flag` string itself, however, the `secondCodeUnit` index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of `secondCodeUnit`, that character is still the flag itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s `samePosition(in:)` method or the `init(_:within:)` initializer."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O() time and space."
          },
          {
            "Para" : "When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations."
          },
          {
            "Para" : "Any `String` instance can be bridged to `NSString` using the type-cast operator (`as`), and any `String` instance that originates in Objective-C may use an `NSString` instance as its storage. Because any arbitrary subclass of `NSString` can become a `String` instance, there are no guarantees about representation or efficiency when a `String` instance is backed by `NSString` storage. Because `NSString` is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O() time and space, where  is the length of the string’s encoded representation (or more, if the underlying `NSString` has unusual performance characteristics)."
          },
          {
            "Para" : "For more information about the Unicode terms used in this discussion, see the . In particular, this discussion mentions , , and ."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>String<\/Name><USR>s:SS<\/USR><Declaration>struct String<\/Declaration><CommentParts><Abstract><Para>A Unicode string value that is a collection of characters.<\/Para><\/Abstract><Discussion><Para>A string is a series of characters, such as <codeVoice>&quot;Swift&quot;<\/codeVoice>, that forms a collection. Strings in Swift are Unicode correct and locale insensitive, and are designed to be efficient. The <codeVoice>String<\/codeVoice> type bridges with the Objective-C class <codeVoice>NSString<\/codeVoice> and offers interoperability with C functions that works with strings.<\/Para><Para>You can create new strings using string literals or string interpolations. A <emphasis>string literal<\/emphasis> is a series of characters enclosed in quotes.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let greeting = \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para><emphasis>String interpolations<\/emphasis> are string literals that evaluate any included expressions and convert the results to string form. String interpolations give you an easy way to build a string from multiple pieces. Wrap each expression in a string interpolation in parentheses, prefixed by a backslash.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Rosa\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let personalizedGreeting = \"Welcome, \\(name)!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ personalizedGreeting == \"Welcome, Rosa!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let price = 2]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let number = 3]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cookiePrice = \"\\(number) cookies: $\\(price * number).\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ cookiePrice == \"3 cookies: $6.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Combine strings using the concatenation operator (<codeVoice>+<\/codeVoice>).<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let longerGreeting = greeting + \" We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ longerGreeting == \"Welcome! We're glad you're here!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Multiline string literals are enclosed in three double quotation marks (<codeVoice>&quot;&quot;&quot;<\/codeVoice>), with each delimiter on its own line. Indentation is stripped from each line of a multiline string literal to match the indentation of the closing delimiter.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let banner = \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          __,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[         (           o  \/) _\/_]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[          `.  , , , ,  \/\/  \/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        (___)(_(_\/_(_ \/\/_ (__]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                     \/)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[                    (\/]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \"\"\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Modifying and Comparing Strings<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Strings always have value semantics. Modifying a copy of a string leaves the original unaffected.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var otherGreeting = greeting]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[otherGreeting += \" Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ otherGreeting == \"Welcome! Have a nice time!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(greeting)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Welcome!\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Comparing strings for equality using the equal-to operator (<codeVoice>==<\/codeVoice>) or a relational operator (like <codeVoice>&lt;<\/codeVoice> or <codeVoice>&gt;=<\/codeVoice>) is always performed using Unicode canonical representation. As a result, different representations of a string compare as being equal.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe1 = \"Cafe\\u{301}\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let cafe2 = \"Café\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe1 == cafe2)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"true\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The Unicode scalar value <codeVoice>&quot;\\u{301}&quot;<\/codeVoice> modifies the preceding character to include an accent, so <codeVoice>&quot;e\\u{301}&quot;<\/codeVoice> has the same canonical representation as the single Unicode scalar value <codeVoice>&quot;é&quot;<\/codeVoice>.<\/Para><Para>Basic string operations are not sensitive to locale settings, ensuring that string comparisons and other operations always have a single, stable result, allowing strings to be used as keys in <codeVoice>Dictionary<\/codeVoice> instances and for other purposes.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>A string is a collection of <emphasis>extended grapheme clusters<\/emphasis>, which approximate human-readable characters. Many individual characters, such as “é”, “김”, and “🇮🇳”, can be made up of multiple Unicode scalar values. These scalar values are combined by Unicode’s boundary algorithms into extended grapheme clusters, represented by the Swift <codeVoice>Character<\/codeVoice> type. Each element of a string is represented by a <codeVoice>Character<\/codeVoice> instance.<\/Para><Para>For example, to retrieve the first word of a longer string, you can search for a space and then create a substring from a prefix of thestring up to that point:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ firstName == \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>firstName<\/codeVoice> constant is an instance of the <codeVoice>Substring<\/codeVoice> type—a type that represents substrings of a string while sharing the original string’s storage. Substrings present the same interface as strings.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(\"\\(name)'s first name has \\(firstName.count) letters.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie Curie's first name has 5 letters.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing a String’s Unicode Representation<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>If you need to access the contents of a string as encoded in different Unicode encodings, use one of the string’s <codeVoice>unicodeScalars<\/codeVoice>, <codeVoice>utf16<\/codeVoice>, or <codeVoice>utf8<\/codeVoice> properties. Each property provides access to a view of the string as a series of code units, each encoded in a different Unicode encoding.<\/Para><Para>To demonstrate the different views available for every string, the following examples use this <codeVoice>String<\/codeVoice> instance:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cafe = \"Cafe\\u{301} du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Café du 🌍\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>cafe<\/codeVoice> string is a collection of the nine characters that are visible when the string is displayed.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"9\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"é\", \" \", \"d\", \"u\", \" \", \"🌍\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>Unicode Scalar View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>unicodeScalars<\/codeVoice> property is a collection of Unicode scalar values, the 21-bit codes that are the basic unit of Unicode. Each scalar value is represented by a <codeVoice>Unicode.Scalar<\/codeVoice> instance and is equivalent to a UTF-32 code unit.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"10\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.unicodeScalars))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[\"C\", \"a\", \"f\", \"e\", \"\\u{0301}\", \" \", \"d\", \"u\", \" \", \"\\u{0001F30D}\"]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cafe.unicodeScalars.map { $0.value })]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 127757]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The <codeVoice>unicodeScalars<\/codeVoice> view’s elements comprise each Unicode scalar value in the <codeVoice>cafe<\/codeVoice> string. In particular, because <codeVoice>cafe<\/codeVoice> was declared using the decomposed form of the <codeVoice>&quot;é&quot;<\/codeVoice> character, <codeVoice>unicodeScalars<\/codeVoice> contains the scalar values for both the letter <codeVoice>&quot;e&quot;<\/codeVoice> (101) and theaccent character <codeVoice>&quot;´&quot;<\/codeVoice> (769).<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-16 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf16<\/codeVoice> property is a collection of UTF-16 code units, the 16-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt16<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf16))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 769, 32, 100, 117, 32, 55356, 57101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf16<\/codeVoice> view are the code units for the string when encoded in UTF-16. These elements match those accessed through indexed <codeVoice>NSString<\/codeVoice> APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let nscafe = cafe as NSString]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.length)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"11\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nscafe.character(at: 3))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"101\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h2>]]><\/rawHTML>UTF-8 View<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>A string’s <codeVoice>utf8<\/codeVoice> property is a collection of UTF-8 code units, the 8-bit encoding form of the string’s Unicode scalar values. Each code unit is stored as a <codeVoice>UInt8<\/codeVoice> instance.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(cafe.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(Array(cafe.utf8))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[67, 97, 102, 101, 204, 129, 32, 100, 117, 32, 240, 159, 140, 141]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The elements of the <codeVoice>utf8<\/codeVoice> view are the code units for the string when encoded in UTF-8. This representation matches the one used when <codeVoice>String<\/codeVoice> instances are passed to C APIs.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cLength = strlen(cafe)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(cLength)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"14\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Measuring the Length of a String<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>When you need to know the length of a string, you must first consider what you’ll use the length for. Are you measuring the number of characters that will be displayed on the screen, or are you measuring the amount of storage needed for the string in a particular encoding? A single string can have greatly differing lengths when measured by its different views.<\/Para><Para>For example, an ASCII character like the capital letter <emphasis>A<\/emphasis> is represented by a single element in each of its four views. The Unicode scalar value of <emphasis>A<\/emphasis> is <codeVoice>65<\/codeVoice>, which is small enough to fit in a single code unit in both UTF-16 and UTF-8.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let capitalA = \"A\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(capitalA.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>On the other hand, an emoji flag character is constructed from a pair of Unicode scalar values, like <codeVoice>&quot;\\u{1F1F5}&quot;<\/codeVoice> and <codeVoice>&quot;\\u{1F1F7}&quot;<\/codeVoice>. Each of these scalar values, in turn, is too large to fit into a single UTF-16 or UTF-8 code unit. As a result, each view of the string <codeVoice>&quot;🇵🇷&quot;<\/codeVoice> reports a different length.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let flag = \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"1\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.unicodeScalars.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"2\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf16.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"4\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(flag.utf8.count)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"8\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>To check whether a string is empty, use its <codeVoice>isEmpty<\/codeVoice> property instead of comparing the length of one of the views to <codeVoice>0<\/codeVoice>. Unlike with <codeVoice>isEmpty<\/codeVoice>, calculating a view’s <codeVoice>count<\/codeVoice> property requires iterating through the elements of the string.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Accessing String View Elements<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>To find individual elements of a string, use the appropriate view for your task. For example, to retrieve the first word of a longer string, you can search the string for a space and then create a new string from a prefix of the string up to that point.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let name = \"Marie Curie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstSpace = name.firstIndex(of: \" \") ?? name.endIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let firstName = name[..<firstSpace]]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstName)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"Marie\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Strings and their views share indices, so you can access the UTF-8 view of the <codeVoice>name<\/codeVoice> string using the same <codeVoice>firstSpace<\/codeVoice> index.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(Array(name.utf8[..<firstSpace]))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"[77, 97, 114, 105, 101]\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Note that an index into one view may not have an exact corresponding position in another view. For example, the <codeVoice>flag<\/codeVoice> string declared above comprises a single character, but is composed of eight code units when encoded as UTF-8. The following code creates constants for the first and second positions in the <codeVoice>flag.utf8<\/codeVoice> view. Accessing the <codeVoice>utf8<\/codeVoice> view with these indices yields the first and second code UTF-8 units.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let firstCodeUnit = flag.startIndex]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[let secondCodeUnit = flag.utf8.index(after: firstCodeUnit)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[firstCodeUnit] == 240]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag.utf8[secondCodeUnit] == 159]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>When used to access the elements of the <codeVoice>flag<\/codeVoice> string itself, however, the <codeVoice>secondCodeUnit<\/codeVoice> index does not correspond to the position of a specific character. Instead of only accessing the specific UTF-8 code unit, that index is treated as the position of the character at the index’s encoded offset. In the case of <codeVoice>secondCodeUnit<\/codeVoice>, that character is still the flag itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[\/\/ flag[firstCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ flag[secondCodeUnit] == \"🇵🇷\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>If you need to validate that an index from one string’s view corresponds with an exact position in another view, use the index’s <codeVoice>samePosition(in:)<\/codeVoice> method or the <codeVoice>init(_:within:)<\/codeVoice> initializer.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let exactIndex = secondCodeUnit.samePosition(in: flag) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(flag[exactIndex])]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"No exact match for this position.\")]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[\/\/ Prints \"No exact match for this position.\"]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><rawHTML><![CDATA[<h1>]]><\/rawHTML>Performance Optimizations<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Although strings in Swift have value semantics, strings use a copy-on-write strategy to store their data in a buffer. This buffer can then be shared by different copies of a string. A string’s data is only copied lazily, upon mutation, when more than one string instance is using the same buffer. Therefore, the first in any sequence of mutating operations may cost O(<emphasis>n<\/emphasis>) time and space.<\/Para><Para>When a string’s contiguous storage fills up, a new buffer must be allocated and data must be moved to the new storage. String buffers use an exponential growth strategy that makes appending to a string a constant time operation when averaged over many append operations.<\/Para><rawHTML><![CDATA[<h1>]]><\/rawHTML>Bridging Between String and NSString<rawHTML><![CDATA[<\/h1>]]><\/rawHTML><Para>Any <codeVoice>String<\/codeVoice> instance can be bridged to <codeVoice>NSString<\/codeVoice> using the type-cast operator (<codeVoice>as<\/codeVoice>), and any <codeVoice>String<\/codeVoice> instance that originates in Objective-C may use an <codeVoice>NSString<\/codeVoice> instance as its storage. Because any arbitrary subclass of <codeVoice>NSString<\/codeVoice> can become a <codeVoice>String<\/codeVoice> instance, there are no guarantees about representation or efficiency when a <codeVoice>String<\/codeVoice> instance is backed by <codeVoice>NSString<\/codeVoice> storage. Because <codeVoice>NSString<\/codeVoice> is immutable, it is just as though the storage was shared by a copy. The first in any sequence of mutating operations causes elements to be copied into unique, contiguous storage which may cost O(<emphasis>n<\/emphasis>) time and space, where <emphasis>n<\/emphasis> is the length of the string’s encoded representation (or more, if the underlying <codeVoice>NSString<\/codeVoice> has unusual performance characteristics).<\/Para><Para>For more information about the Unicode terms used in this discussion, see the <Link href=\"http:\/\/www.unicode.org\/glossary\/\">Unicode.org glossary<\/Link>. In particular, this discussion mentions <Link href=\"http:\/\/www.unicode.org\/glossary\/#extended_grapheme_cluster\">extended grapheme clusters<\/Link>, <Link href=\"http:\/\/www.unicode.org\/glossary\/#unicode_scalar_value\">Unicode scalar values<\/Link>, and <Link href=\"http:\/\/www.unicode.org\/glossary\/#canonical_equivalent\">canonical equivalence<\/Link>.<\/Para><\/Discussion><\/CommentParts><\/Class>","key.doc.name" : "String",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>String<\/decl.name><\/decl.struct>",
        "key.groupname" : "String",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 158,
        "key.modulename" : "Swift",
        "key.name" : "String",
        "key.namelength" : 6,
        "key.nameoffset" : 89,
        "key.offset" : 79,
        "key.parsed_declaration" : "extension String",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 8,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var isAbsolute: <Type usr=\"s:Sb\">Bool<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 100
              }
            ],
            "key.bodylength" : 105,
            "key.bodyoffset" : 129,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/File.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isAbsolute<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.groupname" : "String",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 128,
            "key.name" : "isAbsolute",
            "key.namelength" : 10,
            "key.nameoffset" : 111,
            "key.offset" : 107,
            "key.parsed_declaration" : "public var isAbsolute: Bool",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 9,
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:SS8ShellKitE10isAbsoluteSbvp"
          }
        ],
        "key.typename" : "String.Type",
        "key.typeusr" : "$sSSmD",
        "key.usr" : "s:SS"
      }
    ]
  }
}, {
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Process.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 588,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>class Process : <Type usr=\"c:objc(cs)NSObject\">NSObject<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 100
          }
        ],
        "key.bodylength" : 440,
        "key.bodyoffset" : 146,
        "key.filepath" : "\/Applications\/Xcode.app\/Contents\/Developer\/Platforms\/MacOSX.platform\/Developer\/SDKs\/MacOSX10.15.sdk\/System\/Library\/Frameworks\/Foundation.framework\/Headers\/NSTask.h",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Process<\/decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject<\/ref.class><\/decl.class>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 460,
        "key.modulename" : "Foundation.NSTask",
        "key.name" : "Process",
        "key.namelength" : 7,
        "key.nameoffset" : 137,
        "key.offset" : 127,
        "key.parsed_declaration" : "extension Process",
        "key.parsed_scope.end" : 27,
        "key.parsed_scope.start" : 11,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func process(for command: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>, using shell: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C4NameO\">Name<\/Type>) -&gt; <Type usr=\"c:objc(cs)NSTask\">Process<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 149
              }
            ],
            "key.bodylength" : 349,
            "key.bodyoffset" : 235,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Process.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>process<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>command<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>shell<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.enum usr=\"s:8ShellKit0A0C4NameO\">Name<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)NSTask\">Process<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 429,
            "key.name" : "process(for:using:)",
            "key.namelength" : 54,
            "key.nameoffset" : 168,
            "key.offset" : 156,
            "key.parsed_declaration" : "public static func process(for command: Command, using shell: Shell.Name) -> Process",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 12,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let process: <Type usr=\"c:objc(cs)NSTask\">Process<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Process.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>process<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSTask\">Process<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 23,
                "key.name" : "process",
                "key.namelength" : 7,
                "key.nameoffset" : 244,
                "key.offset" : 240,
                "key.parsed_declaration" : "let process = Process()",
                "key.parsed_scope.end" : 13,
                "key.parsed_scope.start" : 13,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"s:So6NSTaskC8ShellKitE7process3for5usingAbC7CommandV_AC0B0C4NameOtFZ\">process(for:using:)<\/RelatedName>"
                  }
                ],
                "key.typename" : "Process",
                "key.typeusr" : "$sSo6NSTaskCD",
                "key.usr" : "s:So6NSTaskC8ShellKitE7process3for5usingAbC7CommandV_AC0B0C4NameOtFZADL_ABvp"
              }
            ],
            "key.typename" : "(Process.Type) -> (Command, Shell.Name) -> Process",
            "key.typeusr" : "$s3for5usingSo6NSTaskC8ShellKit7CommandV_AE0D0C4NameOtcD",
            "key.usr" : "s:So6NSTaskC8ShellKitE7process3for5usingAbC7CommandV_AC0B0C4NameOtFZ"
          }
        ],
        "key.typename" : "Process.Type",
        "key.typeusr" : "$sSo6NSTaskCmD",
        "key.usr" : "c:objc(cs)NSTask"
      }
    ]
  }
}, {
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4005,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias LogLevel = <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/Type>.<Type usr=\"s:8ShellKit0A0C8ReporterC5LevelO\">Level<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 129
          },
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 102
          }
        ],
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>LogLevel<\/decl.name> = <ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.class usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/ref.class>.<ref.enum usr=\"s:8ShellKit0A0C8ReporterC5LevelO\">Level<\/ref.enum><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 41,
        "key.name" : "LogLevel",
        "key.namelength" : 8,
        "key.nameoffset" : 146,
        "key.offset" : 136,
        "key.parsed_declaration" : "public typealias LogLevel = Shell.Reporter.Level",
        "key.parsed_scope.end" : 11,
        "key.parsed_scope.start" : 11,
        "key.typename" : "Shell.Reporter.Level.Type",
        "key.typeusr" : "$s8ShellKit0A0C8ReporterC5LevelOmD",
        "key.usr" : "s:8ShellKit8LogLevela"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public class Shell<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 179
          }
        ],
        "key.bodylength" : 1800,
        "key.bodyoffset" : 223,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Shell<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1818,
        "key.name" : "Shell",
        "key.namelength" : 5,
        "key.nameoffset" : 216,
        "key.offset" : 206,
        "key.parsed_declaration" : "extension Shell",
        "key.parsed_scope.end" : 76,
        "key.parsed_scope.start" : 14,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public class Reporter<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 226
              }
            ],
            "key.bodylength" : 1772,
            "key.bodyoffset" : 249,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
            "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Reporter<\/decl.name><\/decl.class>",
            "key.kind" : "source.lang.swift.decl.class",
            "key.length" : 1789,
            "key.name" : "Reporter",
            "key.namelength": 8,
            "key.nameoffset" : 239,
            "key.offset" : 233,
            "key.parsed_declaration" : "public class Reporter",
            "key.parsed_scope.end" : 75,
            "key.parsed_scope.start" : 15,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var log: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 254
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>log<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 13,
                "key.name" : "log",
                "key.namelength" : 3,
                "key.nameoffset" : 265,
                "key.offset" : 261,
                "key.parsed_declaration" : "public var log: Bool",
                "key.parsed_scope.end" : 16,
                "key.parsed_scope.start" : 16,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Bool",
                "key.typeusr" : "$sSbD",
                "key.usr" : "s:8ShellKit0A0C8ReporterC3logSbvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var shellLogLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 279
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>shellLogLevel<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 34,
                "key.name" : "shellLogLevel",
                "key.namelength" : 13,
                "key.nameoffset" : 290,
                "key.offset" : 286,
                "key.parsed_declaration" : "public var shellLogLevel: LogLevel = .off",
                "key.parsed_scope.end" : 17,
                "key.parsed_scope.start" : 17,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Shell.Reporter.Level",
                "key.typeusr" : "$s8ShellKit0A0C8ReporterC5LevelOD",
                "key.usr" : "s:8ShellKit0A0C8ReporterC13shellLogLevelAE0F0Ovp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var commandLogLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 325
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>commandLogLevel<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 36,
                "key.name" : "commandLogLevel",
                "key.namelength" : 15,
                "key.nameoffset" : 336,
                "key.offset" : 332,
                "key.parsed_declaration" : "public var commandLogLevel: LogLevel = .off",
                "key.parsed_scope.end" : 18,
                "key.parsed_scope.start" : 18,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Shell.Reporter.Level",
                "key.typeusr" : "$s8ShellKit0A0C8ReporterC5LevelOD",
                "key.usr" : "s:8ShellKit0A0C8ReporterC15commandLogLevelAE0F0Ovp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var data: <Type usr=\"s:10Foundation4DataV\">Data<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 428
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>data<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 15,
                "key.name" : "data",
                "key.namelength" : 4,
                "key.nameoffset" : 439,
                "key.offset" : 435,
                "key.parsed_declaration" : "public var data: Data?",
                "key.parsed_scope.end" : 20,
                "key.parsed_scope.start" : 20,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Data?",
                "key.typeusr" : "$s10Foundation4DataVSgD",
                "key.usr" : "s:8ShellKit0A0C8ReporterC4data10Foundation4DataVSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var pipe: <Type usr=\"c:objc(cs)NSPipe\">Pipe<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 455
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pipe<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSPipe\">Pipe<\/ref.class>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 15,
                "key.name" : "pipe",
                "key.namelength" : 4,
                "key.nameoffset" : 466,
                "key.offset" : 462,
                "key.parsed_declaration" : "public var pipe: Pipe?",
                "key.parsed_scope.end" : 21,
                "key.parsed_scope.start" : 21,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Pipe?",
                "key.typeusr" : "$sSo6NSPipeCSgD",
                "key.usr" : "s:8ShellKit0A0C8ReporterC4pipeSo6NSPipeCSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var glyph: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/Type>.<Type usr=\"s:8ShellKit0A0C8ReporterC5GlyphO\">Glyph<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 536
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>glyph<\/decl.name>: <decl.var.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.class usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/ref.class>.<ref.enum usr=\"s:8ShellKit0A0C8ReporterC5GlyphO\">Glyph<\/ref.enum>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 26,
                "key.name" : "glyph",
                "key.namelength" : 5,
                "key.nameoffset" : 547,
                "key.offset" : 543,
                "key.parsed_declaration" : "public var glyph: Reporter.Glyph?",
                "key.parsed_scope.end" : 23,
                "key.parsed_scope.start" : 23,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "Shell.Reporter.Glyph?",
                "key.typeusr" : "$s8ShellKit0A0C8ReporterC5GlyphOSgD",
                "key.usr" : "s:8ShellKit0A0C8ReporterC5glyphAE5GlyphOSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public init(glyph: <Type usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/Type>.<Type usr=\"s:8ShellKit0A0C8ReporterC5GlyphO\">Glyph<\/Type>? = nil, log: <Type usr=\"s:Sb\">Bool<\/Type> = false)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 575
                  }
                ],
                "key.bodylength" : 51,
                "key.bodyoffset" : 637,
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>glyph<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/ref.class>.<ref.enum usr=\"s:8ShellKit0A0C8ReporterC5GlyphO\">Glyph<\/ref.enum>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>log<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 107,
                "key.name" : "init(glyph:log:)",
                "key.namelength" : 53,
                "key.nameoffset" : 582,
                "key.offset" : 582,
                "key.parsed_declaration" : "public init(glyph: Reporter.Glyph? = nil, log: Bool = false)",
                "key.parsed_scope.end" : 28,
                "key.parsed_scope.start" : 25,
                "key.substructure" : [

                ],
                "key.typename" : "(Shell.Reporter.Type) -> (Shell.Reporter.Glyph?, Bool) -> Shell.Reporter",
                "key.typeusr" : "$s5glyph3log8ShellKit0C0C8ReporterCAG5GlyphOSg_SbtcD",
                "key.usr" : "s:8ShellKit0A0C8ReporterC5glyph3logA2E5GlyphOSg_Sbtcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func prepare(log: <Type usr=\"s:Sb\">Bool<\/Type> = false, shellLogLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type>, commandLogLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type>)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 695
                  }
                ],
                "key.bodylength" : 214,
                "key.bodyoffset" : 787,
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>prepare<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>log<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>shellLogLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>commandLogLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 300,
                "key.name" : "prepare(log:shellLogLevel:commandLogLevel:)",
                "key.namelength" : 78,
                "key.nameoffset" : 707,
                "key.offset" : 702,
                "key.parsed_declaration" : "public func prepare(log: Bool = false, shellLogLevel: LogLevel, commandLogLevel: LogLevel)",
                "key.parsed_scope.end" : 38,
                "key.parsed_scope.start" : 30,
                "key.substructure" : [

                ],
                "key.typename" : "(Shell.Reporter) -> (Bool, Shell.Reporter.Level, Shell.Reporter.Level) -> ()",
                "key.typeusr" : "$s3log13shellLogLevel07commandcD0ySb_8ShellKit0F0C8ReporterC0D0OAJtcD",
                "key.usr" : "s:8ShellKit0A0C8ReporterC7prepare3log13shellLogLevel07commandgH0ySb_AE0H0OAKtF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func halt()<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1008
                  }
                ],
                "key.bodylength" : 142,
                "key.bodyoffset" : 1028,
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>halt<\/decl.name>()<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" :156,
                "key.name" : "halt()",
                "key.namelength" : 6,
                "key.nameoffset" : 1020,
                "key.offset" : 1015,
                "key.parsed_declaration" : "public func halt()",
                "key.parsed_scope.end" : 45,
                "key.parsed_scope.start" : 40,
                "key.substructure" : [

                ],
                "key.typename" : "(Shell.Reporter) -> () -> ()",
                "key.typeusr" : "$syycD",
                "key.usr" : "s:8ShellKit0A0C8ReporterC4haltyyF"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func report(file: <Type usr=\"c:objc(cs)NSFileHandle\">FileHandle<\/Type>)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 1177
                  }
                ],
                "key.bodylength" : 802,
                "key.bodyoffset" : 1215,
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>report<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>file<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSFileHandle\">FileHandle<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 834,
                "key.name" : "report(file:)",
                "key.namelength" : 24,
                "key.nameoffset" : 1189,
                "key.offset" : 1184,
                "key.parsed_declaration" : "public func report(file: FileHandle)",
                "key.parsed_scope.end" : 74,
                "key.parsed_scope.start" : 47,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>let fileData: <Type usr=\"s:10Foundation4DataV\">Data<\/Type><\/Declaration>",
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fileData<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 33,
                    "key.name" : "fileData",
                    "key.namelength" : 8,
                    "key.nameoffset" : 1226,
                    "key.offset" : 1222,
                    "key.parsed_declaration" : "let fileData = file.availableData",
                    "key.parsed_scope.end" : 48,
                    "key.parsed_scope.start" : 48,
                    "key.typename" : "Data",
                    "key.typeusr" : "$s10Foundation4DataVD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC6report4fileySo12NSFileHandleC_tF0E4DataL_10Foundation0H0Vvp"
                  },
                  {
                    "key.annotated_decl" : "<Declaration>let trimmed: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>trimmed<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local","key.length" : 66,
                    "key.name" : "trimmed",
                    "key.namelength" : 7,
                    "key.nameoffset" : 1465,
                    "key.offset" : 1461,
                    "key.parsed_declaration" : "let trimmed = line.trimmingCharacters(in: .whitespacesAndNewlines)",
                    "key.parsed_scope.end" : 55,
                    "key.parsed_scope.start" : 55,
                    "key.typename" : "String",
                    "key.typeusr" : "$sSSD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC6report4fileySo12NSFileHandleC_tF7trimmedL_SSvp"
                  }
                ],
                "key.typename" : "(Shell.Reporter) -> (FileHandle) -> ()",
                "key.typeusr" : "$s4fileySo12NSFileHandleC_tcD",
                "key.usr" : "s:8ShellKit0A0C8ReporterC6report4fileySo12NSFileHandleC_tF"
              }
            ],
            "key.typename" : "Shell.Reporter.Type",
            "key.typeusr" : "$s8ShellKit0A0C8ReporterCmD",
            "key.usr" : "s:8ShellKit0A0C8ReporterC"
          }
        ],
        "key.typename" : "Shell.Type",
        "key.typeusr" : "$s8ShellKit0A0CmD",
        "key.usr" : "s:8ShellKit0A0C"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public class Reporter<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 2026
          }
        ],
        "key.bodylength" : 1299,
        "key.bodyoffset" : 2079,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Reporter<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1326,
        "key.name" : "Shell.Reporter",
        "key.namelength" : 14,
        "key.nameoffset" : 2063,
        "key.offset" : 2053,
        "key.parsed_declaration" : "extension Shell.Reporter",
        "key.parsed_scope.end" : 121,
        "key.parsed_scope.start" : 79,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum Glyph : <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2082
              }
            ],
            "key.bodylength" : 29,
            "key.bodyoffset" : 2109,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 6,
                "key.offset" : 2101
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Glyph<\/decl.name> : <ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "String"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 50,
            "key.name" : "Glyph",
            "key.namelength" : 5,
            "key.nameoffset" : 2094,
            "key.offset" : 2089,
            "key.parsed_declaration" : "public enum Glyph: String",
            "key.parsed_scope.end" : 82,
            "key.parsed_scope.start" : 80,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 21,"key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2114,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case unicorn = &quot;🦄&quot;<\/Declaration>",
                    "key.elements" : [
                      {
                        "key.kind" : "source.lang.swift.structure.elem.init_expr",
                        "key.length" : 6,
                        "key.offset" : 2129
                      }
                    ],
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>unicorn<\/decl.name> = <syntaxtype.string>&quot;🦄&quot;<\/syntaxtype.string><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 16,
                    "key.name" : "unicorn",
                    "key.namelength" : 7,
                    "key.nameoffset" : 2119,
                    "key.offset" : 2119,
                    "key.parsed_declaration" : "case unicorn = \"🦄\"",
                    "key.parsed_scope.end" : 81,
                    "key.parsed_scope.start" : 81,
                    "key.typename" : "(Shell.Reporter.Glyph.Type) -> Shell.Reporter.Glyph",
                    "key.typeusr" : "$sy8ShellKit0A0C8ReporterC5GlyphOAGmcD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC5GlyphO7unicornyA2GmF"
                  }
                ]
              }
            ],
            "key.typename" : "Shell.Reporter.Glyph.Type",
            "key.typeusr" : "$s8ShellKit0A0C8ReporterC5GlyphOmD",
            "key.usr" : "s:8ShellKit0A0C8ReporterC5GlyphO"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum Level : <Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:s7Codablea\">Codable<\/Type>, <Type usr=\"s:s12CaseIterableP\">CaseIterable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2300
              }
            ],
            "key.bodylength" : 1026,
            "key.bodyoffset" : 2350,
            "key.doc.column" : 15,
            "key.doc.comment" : "The log level.\n\nLog levels are ordered by their severity, with `.trace` being the least severe and\n`.critical` being the most severe.",
            "key.doc.declaration" : "public enum Level : String, Codable, CaseIterable",
            "key.doc.discussion" : [
              {
                "Para" : "Log levels are ordered by their severity, with `.trace` being the least severe and `.critical` being the most severe."
              }
            ],
            "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"88\" column=\"15\"><Name>Level<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO<\/USR><Declaration>public enum Level : String, Codable, CaseIterable<\/Declaration><CommentParts><Abstract><Para>The log level.<\/Para><\/Abstract><Discussion><Para>Log levels are ordered by their severity, with <codeVoice>.trace<\/codeVoice> being the least severe and <codeVoice>.critical<\/codeVoice> being the most severe.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 88,
            "key.doc.name" : "Level",
            "key.doc.type" : "Other",
            "key.doclength" : 155,
            "key.docoffset" : 2143,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 6,
                "key.offset" : 2319
              },
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 7,
                "key.offset" : 2327
              },
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 12,
                "key.offset" : 2336
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Level<\/decl.name> : <ref.struct usr=\"s:SS\">String<\/ref.struct>, <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias>, <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable<\/ref.protocol><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "String"
              },
              {
                "key.name" : "Codable"
              },
              {
                "key.name" : "CaseIterable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 1070,
            "key.name" : "Level",
            "key.namelength" : 5,
            "key.nameoffset" : 2312,
            "key.offset" : 2307,
            "key.parsed_declaration" : "public enum Level: String, Codable, CaseIterable",
            "key.parsed_scope.end" : 120,
            "key.parsed_scope.start" : 88,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 8,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2375,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case off<\/Declaration>",
                    "key.doc.column" : 10,
                    "key.doc.comment" : "logging off",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"90\" column=\"10\"><Name>off<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO3offyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>logging off<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 90,
                    "key.doc.name" : "off",
                    "key.doc.type" : "Other",
                    "key.doclength" : 16,
                    "key.docoffset" : 2355,
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>off<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 3,
                    "key.name" : "off",
                    "key.namelength" : 3,
                    "key.nameoffset" : 2380,
                    "key.offset" : 2380,
                    "key.parsed_declaration" : "case off",
                    "key.parsed_scope.end" : 90,
                    "key.parsed_scope.start" : 90,
                    "key.typename" : "(Shell.Reporter.Level.Type) -> Shell.Reporter.Level",
                    "key.typeusr" : "$sy8ShellKit0A0C8ReporterC5LevelOAGmcD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO3offyA2GmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 10,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2480,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case trace<\/Declaration>",
                    "key.doc.column" : 10,
                    "key.doc.comment" : "Appropriate for messages that contain information only when debugging a program.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"93\" column=\"10\"><Name>trace<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO5traceyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Appropriate for messages that contain information only when debugging a program.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 93,
                    "key.doc.name" : "trace",
                    "key.doc.type" : "Other",
                    "key.doclength" : 85,
                    "key.docoffset" : 2391,
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>trace<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 5,
                    "key.name" : "trace",
                    "key.namelength" : 5,
                    "key.nameoffset" : 2485,
                    "key.offset" : 2485,
                    "key.parsed_declaration" : "case trace",
                    "key.parsed_scope.end" : 93,
                    "key.parsed_scope.start" : 93,
                    "key.typename" : "(Shell.Reporter.Level.Type) -> Shell.Reporter.Level",
                    "key.typeusr" : "$sy8ShellKit0A0C8ReporterC5LevelOAGmcD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO5traceyA2GmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 10,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2613,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case debug<\/Declaration>",
                    "key.doc.column" : 10,
                    "key.doc.comment" : "Appropriate for messages that contain information normally of use only when\ndebugging a program.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"97\" column=\"10\"><Name>debug<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO5debugyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Appropriate for messages that contain information normally of use only when debugging a program.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 97,
                    "key.doc.name" : "debug",
                    "key.doc.type" : "Other",
                    "key.doclength" : 111,
                    "key.docoffset" : 2498,
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>debug<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 5,
                    "key.name" : "debug",
                    "key.namelength" : 5,
                    "key.nameoffset" : 2618,
                    "key.offset" : 2618,
                    "key.parsed_declaration" : "case debug",
                    "key.parsed_scope.end" : 97,
                    "key.parsed_scope.start" : 97,
                    "key.typename" : "(Shell.Reporter.Level.Type) -> Shell.Reporter.Level",
                    "key.typeusr" : "$sy8ShellKit0A0C8ReporterC5LevelOAGmcD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO5debugyA2GmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 9,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2679,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case info<\/Declaration>",
                    "key.doc.column" : 10,
                    "key.doc.comment" : "Appropriate for informational messages.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"100\" column=\"10\"><Name>info<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO4infoyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Appropriate for informational messages.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 100,
                    "key.doc.name" : "info",
                    "key.doc.type" : "Other",
                    "key.doclength" : 44,
                    "key.docoffset" : 2631,
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>info<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 4,
                    "key.name" : "info",
                    "key.namelength" : 4,
                    "key.nameoffset" : 2684,
                    "key.offset" : 2684,
                    "key.parsed_declaration" : "case info",
                    "key.parsed_scope.end" : 100,
                    "key.parsed_scope.start" : 100,
                    "key.typename" : "(Shell.Reporter.Level.Type) -> Shell.Reporter.Level",
                    "key.typeusr" : "$sy8ShellKit0A0C8ReporterC5LevelOAGmcD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO4infoyA2GmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 11,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2811,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case notice<\/Declaration>",
                    "key.doc.column" : 10,
                    "key.doc.comment" : "Appropriate for conditions that are not error conditions, but that may require\nspecial handling.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"104\" column=\"10\"><Name>notice<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO6noticeyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Appropriate for conditions that are not error conditions, but that may require special handling.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 104,
                    "key.doc.name" : "notice",
                    "key.doc.type" : "Other",
                    "key.doclength" : 111,
                    "key.docoffset" : 2696,
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>notice<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 6,
                    "key.name" : "notice",
                    "key.namelength" : 6,
                    "key.nameoffset" : 2816,
                    "key.offset" : 2816,
                    "key.parsed_declaration" : "case notice",
                    "key.parsed_scope.end" : 104,
                    "key.parsed_scope.start" : 104,
                    "key.typename" : "(Shell.Reporter.Level.Type) -> Shell.Reporter.Level",
                    "key.typeusr" : "$sy8ShellKit0A0C8ReporterC5LevelOAGmcD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO6noticeyA2GmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 12,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2936,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case warning<\/Declaration>",
                    "key.doc.column" : 10,
                    "key.doc.comment" : "Appropriate for messages that are not error conditions, but more severe than\n`.notice`.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"108\" column=\"10\"><Name>warning<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO7warningyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Appropriate for messages that are not error conditions, but more severe than <codeVoice>.notice<\/codeVoice>.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 108,
                    "key.doc.name" : "warning",
                    "key.doc.type" : "Other",
                    "key.doclength" : 102,
                    "key.docoffset" : 2830,
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>warning<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 7,
                    "key.name" : "warning",
                    "key.namelength" : 7,
                    "key.nameoffset" : 2941,
                    "key.offset" : 2941,
                    "key.parsed_declaration" : "case warning",
                    "key.parsed_scope.end" : 108,
                    "key.parsed_scope.start" : 108,
                    "key.typename" : "(Shell.Reporter.Level.Type) -> Shell.Reporter.Level",
                    "key.typeusr" : "$sy8ShellKit0A0C8ReporterC5LevelOAGmcD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO7warningyA2GmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 10,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2998,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case error<\/Declaration>",
                    "key.doc.column" : 10,
                    "key.doc.comment" : "Appropriate for error conditions.",
                    "key.doc.declaration" : "",
                    "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"111\" column=\"10\"><Name>error<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO5erroryA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Appropriate for error conditions.<\/Para><\/Abstract><\/CommentParts><\/Other>",
                    "key.doc.line" : 111,
                    "key.doc.name" : "error",
                    "key.doc.type" : "Other",
                    "key.doclength" : 38,
                    "key.docoffset" : 2956,
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>error<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 5,
                    "key.name" : "error",
                    "key.namelength" : 5,
                    "key.nameoffset" : 3003,
                    "key.offset" : 3003,
                    "key.parsed_declaration" : "case error",
                    "key.parsed_scope.end" : 111,
                    "key.parsed_scope.start" : 111,
                    "key.typename" : "(Shell.Reporter.Level.Type) -> Shell.Reporter.Level",
                    "key.typeusr" : "$sy8ShellKit0A0C8ReporterC5LevelOAGmcD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO5erroryA2GmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 13,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 3360,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case critical<\/Declaration>",
                    "key.doc.column" : 10,
                    "key.doc.comment" : "Appropriate for critical error conditions that usually require immediate\nattention.\n\nWhen a `critical` message is logged, the logging backend (`LogHandler`) is free to perform\nmore heavy-weight operations to capture system state (such as capturing stack traces) to facilitate\ndebugging.",
                    "key.doc.declaration" : "",
                    "key.doc.discussion" : [
                      {
                        "Para" : "When a `critical` message is logged, the logging backend (`LogHandler`) is free to perform more heavy-weight operations to capture system state (such as capturing stack traces) to facilitate debugging."
                      }
                    ],
                    "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"119\" column=\"10\"><Name>critical<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO8criticalyA2GmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>Appropriate for critical error conditions that usually require immediate attention.<\/Para><\/Abstract><Discussion><Para>When a <codeVoice>critical<\/codeVoice> message is logged, the logging backend (<codeVoice>LogHandler<\/codeVoice>) is free to perform more heavy-weight operations to capture system state (such as capturing stack traces) to facilitate debugging.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                    "key.doc.line" : 119,
                    "key.doc.name" : "critical",
                    "key.doc.type" : "Other",
                    "key.doclength" : 340,
                    "key.docoffset" : 3016,
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>critical<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 8,
                    "key.name" : "critical",
                    "key.namelength" : 8,
                    "key.nameoffset" : 3365,
                    "key.offset" : 3365,
                    "key.parsed_declaration" : "case critical",
                    "key.parsed_scope.end" : 119,
                    "key.parsed_scope.start" : 119,
                    "key.typename" : "(Shell.Reporter.Level.Type) -> Shell.Reporter.Level",
                    "key.typeusr" : "$sy8ShellKit0A0C8ReporterC5LevelOAGmcD",
                    "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO8criticalyA2GmF"
                  }
                ]
              }
            ],
            "key.typename" : "Shell.Reporter.Level.Type",
            "key.typeusr" : "$s8ShellKit0A0C8ReporterC5LevelOmD",
            "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO"
          }
        ],
        "key.typename" : "Shell.Reporter.Type",
        "key.typeusr" : "$s8ShellKit0A0C8ReporterCmD",
        "key.usr" : "s:8ShellKit0A0C8ReporterC"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public enum Level : <Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:s7Codablea\">Codable<\/Type>, <Type usr=\"s:s12CaseIterableP\">CaseIterable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 3381
          }
        ],
        "key.bodylength" : 364,
        "key.bodyoffset" : 3440,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public enum Level : String, Codable, CaseIterable",
        "key.doc.discussion" : [
          {
            "Para" : "Log levels are ordered by their severity, with `.trace` being the least severe and `.critical` being the most severe."
          }
        ],
        "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"88\" column=\"15\"><Name>Level<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO<\/USR><Declaration>public enum Level : String, Codable, CaseIterable<\/Declaration><CommentParts><Abstract><Para>The log level.<\/Para><\/Abstract><Discussion><Para>Log levels are ordered by their severity, with <codeVoice>.trace<\/codeVoice> being the least severe and <codeVoice>.critical<\/codeVoice> being the most severe.<\/Para><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 88,
        "key.doc.name" : "Level",
        "key.doc.type" : "Other",
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Level<\/decl.name> : <ref.struct usr=\"s:SS\">String<\/ref.struct>, <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias>, <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable<\/ref.protocol><\/decl.enum>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 397,
        "key.name" : "Shell.Reporter.Level",
        "key.namelength" : 20,
        "key.nameoffset" : 3418,
        "key.offset" : 3408,
        "key.parsed_declaration" : "extension Shell.Reporter.Level",
        "key.parsed_scope.end" : 145,
        "key.parsed_scope.start" : 124,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>internal var naturalIntegralValue: <Type usr=\"s:Si\">Int<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.internal",
                "key.length" : 8,
                "key.offset" : 3443
              }
            ],
            "key.bodylength" : 319,
            "key.bodyoffset" : 3483,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>internal<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>naturalIntegralValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 351,
            "key.name" : "naturalIntegralValue",
            "key.namelength" : 20,
            "key.nameoffset" : 3456,
            "key.offset" : 3452,
            "key.parsed_declaration" : "internal var naturalIntegralValue: Int",
            "key.parsed_scope.end" : 144,
            "key.parsed_scope.start" : 125,
            "key.typename" : "Int",
            "key.typeusr" : "$sSiD",
            "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO20naturalIntegralValueSivp"
          }
        ],
        "key.typename" : "Shell.Reporter.Level.Type",
        "key.typeusr" : "$s8ShellKit0A0C8ReporterC5LevelOmD",
        "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public enum Level : <Type usr=\"s:SS\">String<\/Type>, <Type usr=\"s:s7Codablea\">Codable<\/Type>, <Type usr=\"s:s12CaseIterableP\">CaseIterable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 3807
          }
        ],
        "key.bodylength" : 125,
        "key.bodyoffset" : 3878,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public enum Level : String, Codable, CaseIterable",
        "key.doc.discussion" : [
          {
            "Para" : "Log levels are ordered by their severity, with `.trace` being the least severe and `.critical` being the most severe."
          }
        ],
        "key.doc.file" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift\" line=\"88\" column=\"15\"><Name>Level<\/Name><USR>s:8ShellKit0A0C8ReporterC5LevelO<\/USR><Declaration>public enum Level : String, Codable, CaseIterable<\/Declaration><CommentParts><Abstract><Para>The log level.<\/Para><\/Abstract><Discussion><Para>Log levels are ordered by their severity, with <codeVoice>.trace<\/codeVoice> being the least severe and <codeVoice>.critical<\/codeVoice> being the most severe.<\/Para><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 88,
        "key.doc.name" : "Level",
        "key.doc.type" : "Other",
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 10,
            "key.offset" : 3866
          }
        ],
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Level<\/decl.name> : <ref.struct usr=\"s:SS\">String<\/ref.struct>, <ref.typealias usr=\"s:s7Codablea\">Codable<\/ref.typealias>, <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Comparable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 170,
        "key.name" : "Shell.Reporter.Level",
        "key.namelength" : 20,
        "key.nameoffset" : 3844,
        "key.offset" : 3834,
        "key.parsed_declaration" : "extension Shell.Reporter.Level: Comparable",
        "key.parsed_scope.end" : 152,
        "key.parsed_scope.start" : 148,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func &lt; (lhs: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type>, rhs: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3881
              }
            ],
            "key.bodylength" : 59,
            "key.bodyoffset" : 3942,
            "key.doc.declaration" : "static func < (lhs: Self, rhs: Self) -> Bool",
            "key.doc.discussion" : [
              {
                "Para" : "This function is the only requirement of the `Comparable` protocol. The remainder of the relational operator functions are implemented by the standard library for any type that conforms to `Comparable`."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.full_as_xml" : "<Function><Name>&lt;(_:_:)<\/Name><USR>s:SL1loiySbx_xtFZ<\/USR><Declaration>static func &lt; (lhs: Self, rhs: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether the value of the first argument is less than that of the second argument.<\/Para><\/Abstract><Parameters><Parameter><Name>lhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A value to compare.<\/Para><\/Discussion><\/Parameter><Parameter><Name>rhs<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>Another value to compare.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>This function is the only requirement of the <codeVoice>Comparable<\/codeVoice> protocol. The remainder of the relational operator functions are implemented by the standard library for any type that conforms to <codeVoice>Comparable<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Comparable<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.name" : "<(_:_:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "A value to compare."
                  }
                ],
                "name" : "lhs"
              },
              {
                "discussion" : [
                  {
                    "Para" : "Another value to compare."
                  }
                ],
                "name" : "rhs"
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Reporter.swift",
            "key.fully_annotated_decl" : "<decl.function.operator.infix><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>&lt; <\/decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.operator.infix>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 114,
            "key.name" : "<(_:_:)",
            "key.namelength" : 32,
            "key.nameoffset" : 3900,
            "key.offset" : 3888,
            "key.overrides" : [
              {
                "key.usr" : "s:SL1loiySbx_xtFZ"
              }
            ],
            "key.parsed_declaration" : "public static func < (lhs: LogLevel, rhs: LogLevel) -> Bool",
            "key.parsed_scope.end" : 151,
            "key.parsed_scope.start" : 149,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbyt_yttF\">&lt; (_: (), _: ()) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_t_x_q_ttSLRzSLR_r0_lF\">&lt; &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Comparable, B : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_t_x_q_q0_ttSLRzSLR_SLR0_r1_lF\">&lt; &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_t_x_q_q0_q1_ttSLRzSLR_SLR0_SLR1_r2_lF\">&lt; &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSLRzSLR_SLR0_SLR1_SLR2_r3_lF\">&lt; &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s1loiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSLRzSLR_SLR0_SLR1_SLR2_SLR3_r4_lF\">&lt; &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Comparable, B : Comparable, C : Comparable, D : Comparable, E : Comparable, F : Comparable<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SJ1loiySbSJ_SJtFZ\">&lt; (_: Character, _: Character) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SL1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO1loiySbADyx_G_AFtFZ\">&lt; (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SD5IndexV1loiySbAByxq__G_ADtFZ\">&lt; (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {"key.annotated_decl" : "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV1loiySbAFyx_G_AHtFZ\">&lt; (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SFsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SzsE1loiySbx_qd__tSzRd__lFZ\">&lt; &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5UInt8V1loiySbAB_ABtFZ\">&lt; (_: UInt8, _: UInt8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s4Int8V1loiySbAB_ABtFZ\">&lt; (_: Int8, _: Int8) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt16V1loiySbAB_ABtFZ\">&lt; (_: UInt16, _: UInt16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int16V1loiySbAB_ABtFZ\">&lt; (_: Int16, _: Int16) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt32V1loiySbAB_ABtFZ\">&lt; (_: UInt32, _: UInt32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int32V1loiySbAB_ABtFZ\">&lt; (_: Int32, _: Int32) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s6UInt64V1loiySbAB_ABtFZ\">&lt; (_: UInt64, _: UInt64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5Int64V1loiySbAB_ABtFZ\">&lt; (_: Int64, _: Int64) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Su1loiySbSu_SutFZ\">&lt; (_: UInt, _: UInt) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Si1loiySbSi_SitFZ\">&lt; (_: Int, _: Int) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO6ScalarV1loiySbAD_ADtFZ\">&lt; (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SO1loiySbSO_SOtFZ\">&lt; (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8_PointerPsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s5NeverO1loiySbAB_ABtFZ\">&lt; (_: Never, _: Never) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:Sh5IndexV1loiySbAByx_G_ADtFZ\">&lt; (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SxsE1loiySbx_xtFZ\">&lt; (_: Self, _: Self) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SysE1loiySbx_qd__tSyRd__lFZ\">&lt; &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS1loiySbSS_SStFZ\">&lt; (_: String, _: String) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:SS5IndexV1loiySbAB_ABtFZ\">&lt; (_: String.Index, _: String.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s11_UIntBufferV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV1loiySbAD_ADtFZ\">&lt; (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV1loiySbAD_ADtFZ\">&lt; (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV1loiySbADyx_G_AFtFZ\">&lt; (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:s8AnyIndexV1loiySbAB_ABtFZ\">&lt; (_: AnyIndex, _: AnyIndex) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation4DateV1loiySbAC_ACtFZ\">&lt; (_: Date, _: Date) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation12DateIntervalV1loiySbAC_ACtFZ\">&lt; (_: DateInterval, _: DateInterval) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So9NSDecimala10FoundationE1loiySbAB_ABtFZ\">&lt; (_: Decimal, _: Decimal) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation9IndexPathV1loiySbAC_ACtFZ\">&lt; (_: IndexPath, _: IndexPath) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V1loiySbAE_AEtFZ\">&lt; (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10Foundation11MeasurementV1loiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">&lt; &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV1loiySbAG_AGtFZ\">&lt; (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV1loiySbAG_AGtFZ\">&lt; (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV1loiySbAG_AGtFZ\">&lt; (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A4TimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchTime, _: DispatchTime) -&gt; Bool<\/RelatedName>"},
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8Dispatch0A8WallTimeV1loiySbAC_ACtFZ\">&lt; (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Reporter.Level.Type) -> (Shell.Reporter.Level, Shell.Reporter.Level) -> Bool",
            "key.typeusr" : "$sySb8ShellKit0A0C8ReporterC5LevelO_AGtcD",
            "key.usr" : "s:SL1loiySbx_xtFZ"
          }
        ],
        "key.typename" : "Shell.Reporter.Level.Type",
        "key.typeusr" : "$s8ShellKit0A0C8ReporterC5LevelOmD",
        "key.usr" : "s:8ShellKit0A0C8ReporterC5LevelO"
      }
    ]
  }
}, {
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Result.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 651,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>@frozen struct Data : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type>, <Type usr=\"s:SH\">Hashable<\/Type>, <Type usr=\"s:Sk\">RandomAccessCollection<\/Type>, <Type usr=\"s:SM\">MutableCollection<\/Type>, <Type usr=\"s:Sm\">RangeReplaceableCollection<\/Type>, <Type usr=\"s:10Foundation19MutableDataProtocolP\">MutableDataProtocol<\/Type>, <Type usr=\"s:10Foundation15ContiguousBytesP\">ContiguousBytes<\/Type><\/Declaration>",
        "key.bodylength" : 295,
        "key.bodyoffset" : 194,
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@frozen<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Data<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol>, <ref.protocol usr=\"s:Sk\">RandomAccessCollection<\/ref.protocol>, <ref.protocol usr=\"s:SM\">MutableCollection<\/ref.protocol>, <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection<\/ref.protocol>, <ref.protocol usr=\"s:10Foundation19MutableDataProtocolP\">MutableDataProtocol<\/ref.protocol>, <ref.protocol usr=\"s:10Foundation15ContiguousBytesP\">ContiguousBytes<\/ref.protocol><\/decl.struct>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 312,
        "key.modulename" : "Foundation",
        "key.name" : "Data",
        "key.namelength" : 4,
        "key.nameoffset" : 188,
        "key.offset" : 178,
        "key.parsed_declaration" : "extension Data",
        "key.parsed_scope.end" : 24,
        "key.parsed_scope.start" : 11,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var string: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 270,
            "key.bodyoffset" : 217,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Result.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>string<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 291,
            "key.name" : "string",
            "key.namelength" : 6,
            "key.nameoffset" : 201,
            "key.offset" : 197,
            "key.parsed_declaration" : "var string: String",
            "key.parsed_scope.end" : 23,
            "key.parsed_scope.start" : 12,
            "key.typename" : "String",
            "key.typeusr" : "$sSSD",
            "key.usr" : "s:10Foundation4DataV8ShellKitE6stringSSvp"
          }
        ],
        "key.typename" : "Data.Type",
        "key.typeusr" : "$s10Foundation4DataVmD",
        "key.usr" : "s:10Foundation4DataV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public class Shell<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 492
          }
        ],
        "key.bodylength" : 113,
        "key.bodyoffset" : 536,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Shell<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 131,
        "key.name" : "Shell",
        "key.namelength" : 5,
        "key.nameoffset" : 529,
        "key.offset" : 519,
        "key.parsed_declaration" : "extension Shell",
        "key.parsed_scope.end" : 33,
        "key.parsed_scope.start" : 27,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Result<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 539
              }
            ],
            "key.bodylength" : 86,
            "key.bodyoffset" : 561,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Result.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Result<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 102,
            "key.name" : "Result",
            "key.namelength" : 6,
            "key.nameoffset" : 553,
            "key.offset" : 546,
            "key.parsed_declaration" : "public struct Result",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 28,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let out: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 566
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Result.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>out<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 15,
                "key.name" : "out",
                "key.namelength" : 3,
                "key.nameoffset" : 577,
                "key.offset" : 573,
                "key.parsed_declaration" : "public let out: String",
                "key.parsed_scope.end" : 29,
                "key.parsed_scope.start" : 29,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:8ShellKit0A0C6ResultV3outSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public","key.annotated_decl" : "<Declaration>public let err: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 593
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Result.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>err<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 15,
                "key.name" : "err",
                "key.namelength" : 3,
                "key.nameoffset" : 604,
                "key.offset" : 600,
                "key.parsed_declaration" : "public let err: String",
                "key.parsed_scope.end" : 30,
                "key.parsed_scope.start" : 30,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:8ShellKit0A0C6ResultV3errSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public let status: <Type usr=\"s:s5Int32V\">Int32<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 620
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Result.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>status<\/decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 17,
                "key.name" : "status",
                "key.namelength" : 6,
                "key.nameoffset" : 631,
                "key.offset" : 627,
                "key.parsed_declaration" : "public let status: Int32",
                "key.parsed_scope.end" : 31,
                "key.parsed_scope.start" : 31,
                "key.typename" : "Int32",
                "key.typeusr" : "$ss5Int32VD",
                "key.usr" : "s:8ShellKit0A0C6ResultV6statuss5Int32Vvp"
              }
            ],
            "key.typename" : "Shell.Result.Type",
            "key.typeusr" : "$s8ShellKit0A0C6ResultVmD",
            "key.usr" : "s:8ShellKit0A0C6ResultV"
          }
        ],
        "key.typename" : "Shell.Type",
        "key.typeusr" : "$s8ShellKit0A0CmD",
        "key.usr" : "s:8ShellKit0A0C"
      }
    ]
  }
}, {
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2753,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public class Shell<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 125
          },
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 98
          }
        ],
        "key.bodylength" : 2372,
        "key.bodyoffset" : 145,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift","key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Shell<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.class",
        "key.length" : 2386,
        "key.name" : "Shell",
        "key.namelength" : 5,
        "key.nameoffset" : 138,
        "key.offset" : 132,
        "key.parsed_declaration" : "public class Shell",
        "key.parsed_scope.end" : 91,
        "key.parsed_scope.start" : 11,
        "key.runtime_name" : "_TtC4main5Shell",
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var outLog: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 148
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>outLog<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 31,
            "key.name" : "outLog",
            "key.namelength" : 6,
            "key.nameoffset" : 166,
            "key.offset" : 155,
            "key.parsed_declaration" : "public static var outLog: Bool = false",
            "key.parsed_scope.end" : 12,
            "key.parsed_scope.start" : 12,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:8ShellKit0A0C6outLogSbvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var errLog: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 189
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>errLog<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 31,
            "key.name" : "errLog",
            "key.namelength" : 6,
            "key.nameoffset" : 207,
            "key.offset" : 196,
            "key.parsed_declaration" : "public static var errLog: Bool = false",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 13,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:8ShellKit0A0C6errLogSbvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var name: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C4NameO\">Name<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 230
              }
            ],"key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>name<\/decl.name>: <decl.var.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.enum usr=\"s:8ShellKit0A0C4NameO\">Name<\/ref.enum><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 35,
            "key.name" : "name",
            "key.namelength" : 4,
            "key.nameoffset" : 248,
            "key.offset" : 237,
            "key.parsed_declaration" : "public static var name: Shell.Name = .bash",
            "key.parsed_scope.end" : 14,
            "key.parsed_scope.start" : 14,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Shell.Name",
            "key.typeusr" : "$s8ShellKit0A0C4NameOD",
            "key.usr" : "s:8ShellKit0A0C4nameAC4NameOvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 275
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>logLevel<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.type><\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 37,
            "key.name" : "logLevel",
            "key.namelength" : 8,
            "key.nameoffset" : 293,
            "key.offset" : 282,
            "key.parsed_declaration" : "public static var logLevel: LogLevel = .info",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 15,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Shell.Reporter.Level",
            "key.typeusr" : "$s8ShellKit0A0C8ReporterC5LevelOD",
            "key.usr" : "s:8ShellKit0A0C8logLevelAC8ReporterC0D0OvpZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var outReport: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>outReport<\/decl.name>: <decl.var.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.class usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "outReport",
            "key.namelength" : 9,
            "key.nameoffset" : 353,
            "key.offset" : 349,
            "key.parsed_declaration" : "var outReport: Shell.Reporter",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 18,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Shell.Reporter",
            "key.typeusr" : "$s8ShellKit0A0C8ReporterCD",
            "key.usr" : "s:8ShellKit0A0C9outReportAC8ReporterCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var errReport: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>errReport<\/decl.name>: <decl.var.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.class usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/ref.class><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 29,
            "key.name" : "errReport",
            "key.namelength" : 9,
            "key.nameoffset" : 385,
            "key.offset" : 381,
            "key.parsed_declaration" : "var errReport: Shell.Reporter",
            "key.parsed_scope.end" : 19,
            "key.parsed_scope.start" : 19,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Shell.Reporter",
            "key.typeusr" : "$s8ShellKit0A0C8ReporterCD",
            "key.usr" : "s:8ShellKit0A0C9errReportAC8ReporterCvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var debug: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>debug<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 15,
            "key.name" : "debug",
            "key.namelength" : 5,
            "key.nameoffset" : 417,
            "key.offset" : 413,
            "key.parsed_declaration" : "var debug: Bool",
            "key.parsed_scope.end" : 20,
            "key.parsed_scope.start" : 20,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:8ShellKit0A0C5debugSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var process: <Type usr=\"c:objc(cs)NSTask\">Process<\/Type>!<\/Declaration>",
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>process<\/decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSTask\">Process<\/ref.class>!<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.name" : "process",
            "key.namelength" : 7,
            "key.nameoffset" : 488,
            "key.offset" : 484,
            "key.parsed_declaration" : "var process: Process!",
            "key.parsed_scope.end" : 22,
            "key.parsed_scope.start" : 22,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "Process?",
            "key.typeusr" : "$sSo6NSTaskCSgD",
            "key.usr" : "s:8ShellKit0A0C7processSo6NSTaskCSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(outReport: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/Type> = Shell.Reporter(), errReport: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/Type> = Shell.Reporter(), debug: <Type usr=\"s:Sb\">Bool<\/Type> = false)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 561
              }
            ],
            "key.bodylength" : 88,
            "key.bodyoffset" : 703,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>outReport<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.class usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/ref.class><\/decl.var.parameter.type> = Shell.Reporter()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>errReport<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.class usr=\"s:8ShellKit0A0C8ReporterC\">Reporter<\/ref.class><\/decl.var.parameter.type> = Shell.Reporter()<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>debug<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 224,
            "key.name" : "init(outReport:errReport:debug:)",
            "key.namelength" : 133,
            "key.nameoffset" : 568,
            "key.offset" : 568,
            "key.parsed_declaration" : "public init(\n  outReport: Shell.Reporter = Shell.Reporter(),\n  errReport: Shell.Reporter = Shell.Reporter(),\n  debug: Bool = false\n)",
            "key.parsed_scope.end" : 33,
            "key.parsed_scope.start" : 25,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> (Shell.Reporter, Shell.Reporter, Bool) -> Shell",
            "key.typeusr" : "$s9outReport03errB05debug8ShellKit0E0CAF8ReporterC_AHSbtcD",
            "key.usr" : "s:8ShellKit0A0C9outReport03errD05debugA2C8ReporterC_AHSbtcfc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func prepare(commandLogLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type>)<\/Declaration>",
            "key.bodylength" : 328,
            "key.bodyoffset" : 837,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>prepare<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>commandLogLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 370,
            "key.name" : "prepare(commandLogLevel:)",
            "key.namelength" : 34,
            "key.nameoffset" : 801,
            "key.offset" : 796,
            "key.parsed_declaration" : "func prepare(commandLogLevel: LogLevel)",
            "key.parsed_scope.end" : 43,
            "key.parsed_scope.start" : 35,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell) -> (Shell.Reporter.Level) -> ()",
            "key.typeusr" : "$s15commandLogLevely8ShellKit0D0C8ReporterC0C0O_tcD",
            "key.usr" : "s:8ShellKit0A0C7prepare15commandLogLevelyAC8ReporterC0F0O_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>func halt()<\/Declaration>",
            "key.bodylength" : 63,
            "key.bodyoffset" : 1183,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>halt<\/decl.name>()<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 77,
            "key.name" : "halt()",
            "key.namelength" : 6,
            "key.nameoffset" : 1175,
            "key.offset" : 1170,
            "key.parsed_declaration" : "func halt()",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 45,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell) -> () -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:8ShellKit0A0C4haltyyF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func execute(_ command: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1251
              }
            ],
            "key.bodylength" : 1088,
            "key.bodyoffset" : 1315,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>command<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1146,
            "key.name" : "execute(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 1263,
            "key.offset" : 1258,
            "key.parsed_declaration" : "public func execute(_ command: Command) throws -> Shell.Result",
            "key.parsed_scope.end" : 86,
            "key.parsed_scope.start" : 51,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8ShellKit0A0C7executeyAC6ResultVAA7CommandVKFZ\">execute(_: Command) throws -&gt; Shell.Result<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let result: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 154,
                "key.name" : "result",
                "key.namelength" : 6,
                "key.nameoffset" : 2116,
                "key.offset" : 2112,
                "key.parsed_declaration" : "let result = Shell.Result(\n  out: outReport.data?.string ?? \"\",\n  err: errReport.data?.string ?? \"\",\n  status: process.terminationStatus\n)",
                "key.parsed_scope.end" : 73,
                "key.parsed_scope.start" : 73,
                "key.typename" : "Shell.Result",
                "key.typeusr" : "$s8ShellKit0A0C6ResultVD",
                "key.usr" : "s:8ShellKit0A0C7executeyAC6ResultVAA7CommandVKF6resultL_AFvp"
              }
            ],
            "key.typename" : "(Shell) -> (Command) throws -> Shell.Result",
            "key.typeusr" : "$sy8ShellKit0A0C6ResultVAA7CommandVKcD",
            "key.usr" : "s:8ShellKit0A0C7executeyAC6ResultVAA7CommandVKF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static func execute(_ command: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2408
              }
            ],
            "key.bodylength" : 36,
            "key.bodyoffset" : 2479,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>execute<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>command<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 101,
            "key.name" : "execute(_:)",
            "key.namelength" : 27,
            "key.nameoffset" : 2427,
            "key.offset" : 2415,
            "key.parsed_declaration" : "public static func execute(_ command: Command) throws -> Shell.Result",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 88,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:8ShellKit0A0C7executeyAC6ResultVAA7CommandVKF\">execute(_: Command) throws -&gt; Shell.Result<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> (Command) throws -> Shell.Result",
            "key.typeusr" : "$sy8ShellKit0A0C6ResultVAA7CommandVKcD",
            "key.usr" : "s:8ShellKit0A0C7executeyAC6ResultVAA7CommandVKFZ"
          }
        ],
        "key.typename" : "Shell.Type",
        "key.typeusr" : "$s8ShellKit0A0CmD",
        "key.usr" : "s:8ShellKit0A0C"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public class Shell<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 2520
          }
        ],
        "key.bodylength" : 187,
        "key.bodyoffset" : 2564,
        "key.filepath" :"\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Shell<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 205,
        "key.name" : "Shell",
        "key.namelength" : 5,
        "key.nameoffset" : 2557,
        "key.offset" : 2547,
        "key.parsed_declaration" : "extension Shell",
        "key.parsed_scope.end" : 109,
        "key.parsed_scope.start" : 94,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public enum Name : <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2567
              }
            ],
            "key.bodylength" : 156,
            "key.bodyoffset" : 2593,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 6,
                "key.offset" : 2585
              }
            ],
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>Name<\/decl.name> : <ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "String"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 176,
            "key.name" : "Name",
            "key.namelength" : 4,
            "key.nameoffset" : 2579,
            "key.offset" : 2574,
            "key.parsed_declaration" : "public enum Name: String",
            "key.parsed_scope.end" : 108,
            "key.parsed_scope.start" : 95,
            "key.substructure" : [
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 7,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2598,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case sh<\/Declaration>",
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>sh<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 2,
                    "key.name" : "sh",
                    "key.namelength" : 2,
                    "key.nameoffset" : 2603,
                    "key.offset" : 2603,
                    "key.parsed_declaration" : "case sh",
                    "key.parsed_scope.end" : 96,
                    "key.parsed_scope.start" : 96,
                    "key.typename" : "(Shell.Name.Type) -> Shell.Name",
                    "key.typeusr" : "$sy8ShellKit0A0C4NameOAEmcD",
                    "key.usr" : "s:8ShellKit0A0C4NameO2shyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 9,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2610,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public","key.annotated_decl" : "<Declaration>case bash<\/Declaration>",
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>bash<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 4,
                    "key.name" : "bash",
                    "key.namelength" : 4,
                    "key.nameoffset" : 2615,
                    "key.offset" : 2615,
                    "key.parsed_declaration" : "case bash",
                    "key.parsed_scope.end" : 97,
                    "key.parsed_scope.start" : 97,
                    "key.typename" : "(Shell.Name.Type) -> Shell.Name",
                    "key.typeusr" : "$sy8ShellKit0A0C4NameOAEmcD",
                    "key.usr" : "s:8ShellKit0A0C4NameO4bashyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 8,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2624,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case zsh<\/Declaration>",
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>zsh<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 3,
                    "key.name" : "zsh",
                    "key.namelength" : 3,
                    "key.nameoffset" : 2629,
                    "key.offset" : 2629,
                    "key.parsed_declaration" : "case zsh",
                    "key.parsed_scope.end" : 98,
                    "key.parsed_scope.start" : 98,
                    "key.typename" : "(Shell.Name.Type) -> Shell.Name",
                    "key.typeusr" : "$sy8ShellKit0A0C4NameOAEmcD",
                    "key.usr" : "s:8ShellKit0A0C4NameO3zshyA2EmF"
                  }
                ]
              },
              {
                "key.kind" : "source.lang.swift.decl.enumcase",
                "key.length" : 9,
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 2637,
                "key.substructure" : [
                  {
                    "key.accessibility" : "source.lang.swift.accessibility.public",
                    "key.annotated_decl" : "<Declaration>case fish<\/Declaration>",
                    "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
                    "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>fish<\/decl.name><\/decl.enumelement>",
                    "key.kind" : "source.lang.swift.decl.enumelement",
                    "key.length" : 4,
                    "key.name" : "fish",
                    "key.namelength" : 4,
                    "key.nameoffset" : 2642,
                    "key.offset" : 2642,
                    "key.parsed_declaration" : "case fish",
                    "key.parsed_scope.end" : 99,
                    "key.parsed_scope.start" : 99,
                    "key.typename" : "(Shell.Name.Type) -> Shell.Name",
                    "key.typeusr" : "$sy8ShellKit0A0C4NameOAEmcD",
                    "key.usr" : "s:8ShellKit0A0C4NameO4fishyA2EmF"
                  }
                ]
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var name: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
                "key.bodylength" : 20,
                "key.bodyoffset" : 2670,
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>name<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 39,
                "key.name" : "name",
                "key.namelength" : 4,
                "key.nameoffset" : 2656,
                "key.offset" : 2652,
                "key.parsed_declaration" : "var name: String",
                "key.parsed_scope.end" : 103,
                "key.parsed_scope.start" : 101,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:8ShellKit0A0C4NameO4nameSSvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var path: <Type usr=\"s:SS\">String<\/Type> { get }<\/Declaration>",
                "key.bodylength" : 30,
                "key.bodyoffset" : 2715,
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 49,
                "key.name" : "path",
                "key.namelength" : 4,
                "key.nameoffset" : 2701,
                "key.offset" : 2697,
                "key.parsed_declaration" : "var path: String",
                "key.parsed_scope.end" : 107,
                "key.parsed_scope.start" : 105,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:8ShellKit0A0C4NameO4pathSSvp"
              }
            ],
            "key.typename" : "Shell.Name.Type",
            "key.typeusr" : "$s8ShellKit0A0C4NameOmD",
            "key.usr" : "s:8ShellKit0A0C4NameO"
          }
        ],
        "key.typename" : "Shell.Type",
        "key.typeusr" : "$s8ShellKit0A0CmD",
        "key.usr" : "s:8ShellKit0A0C"
      }
    ]
  }
}, {
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Validate.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 249,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public func validate(_ condition: <Type usr=\"s:Sb\">Bool<\/Type>, _ message: <Type usr=\"s:SS\">String<\/Type>) throws<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 110
          },
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 83
          }
        ],
        "key.bodylength" : 70,
        "key.bodyoffset" : 177,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Validate.swift",
        "key.fully_annotated_decl" : "<decl.function.free><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>validate<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>condition<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>message<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword><\/decl.function.free>",
        "key.kind" : "source.lang.swift.decl.function.free",
        "key.length" : 131,
        "key.name" : "validate(_:_:)",
        "key.namelength" : 46,
        "key.nameoffset" : 122,
        "key.offset" : 117,
        "key.parsed_declaration" : "public func validate(_ condition: Bool, _ message: String) throws",
        "key.parsed_scope.end" : 13,
        "key.parsed_scope.start" : 9,
        "key.substructure" : [

        ],
        "key.typename" : "(Bool, String) throws -> ()",
        "key.typeusr" : "$syySb_SStKcD",
        "key.usr" : "s:8ShellKit8validateyySb_SStKF"
      }
    ]
  }
}, {
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/git-commands.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1958,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public class Shell<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 87
          }
        ],
        "key.bodylength" : 1825,
        "key.bodyoffset" : 131,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Shell<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1843,
        "key.name" : "Shell",
        "key.namelength" : 5,
        "key.nameoffset" : 124,
        "key.offset" : 114,
        "key.parsed_declaration" : "extension Shell",
        "key.parsed_scope.end" : 61,
        "key.parsed_scope.start" : 9,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func git(using name: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C4NameO\">Name<\/Type> = .sh, arguments: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV9Argumentsa\">Arguments<\/Type> = [], environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type> = [:], workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .info) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 155
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 134
              }
            ],
            "key.bodylength" : 151,
            "key.bodyoffset" : 378,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/git-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>git<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>name<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.enum usr=\"s:8ShellKit0A0C4NameO\">Name<\/ref.enum><\/decl.var.parameter.type> = .sh<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>arguments<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV9Argumentsa\">Arguments<\/ref.typealias><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workingDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .info<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 368,
            "key.name" : "git(using:arguments:environment:workingDirectory:logLevel:)",
            "key.namelength" : 179,
            "key.nameoffset" : 174,
            "key.offset" : 162,
            "key.parsed_declaration" : "public static func git(using name: Shell.Name = .sh, arguments: Command.Arguments = [], environment: Command.Environment = [:], workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .info) throws -> Shell.Result",
            "key.parsed_scope.end" : 13,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> (Shell.Name, [String], [String : String], String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s5using9arguments11environment16workingDirectory8logLevel8ShellKit0H0C6ResultVAH4NameO_SaySSGSDyS2SGSSAH8ReporterC0G0OtKcD",
            "key.usr" : "s:8ShellKit0A0C3git5using9arguments11environment16workingDirectory8logLevelAC6ResultVAC4NameO_SaySSGSDyS2SGSSAC8ReporterC0J0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>@discardableResult static func gitAddAll(environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type> = [:], workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .info) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 534
              }
            ],
            "key.bodylength" : 155,
            "key.bodyoffset" : 712,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/git-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>gitAddAll<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workingDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .info<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 313,
            "key.name" : "gitAddAll(environment:workingDirectory:logLevel:)",
            "key.namelength" : 120,
            "key.nameoffset" : 567,
            "key.offset" : 555,
            "key.parsed_declaration" : "static func gitAddAll(environment: Command.Environment = [:], workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .info) throws -> Shell.Result",
            "key.parsed_scope.end" : 18,
            "key.parsed_scope.start" : 16,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> ([String : String], String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s11environment16workingDirectory8logLevel8ShellKit0F0C6ResultVSDyS2SG_SSAF8ReporterC0E0OtKcD",
            "key.usr" : "s:8ShellKit0A0C9gitAddAll11environment16workingDirectory8logLevelAC6ResultVSDyS2SG_SSAC8ReporterC0J0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var git_ls: [<Type usr=\"s:SS\">String<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 872
              }
            ],
            "key.bodylength" : 299,
            "key.bodyoffset" : 908,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/git-commands.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>git_ls<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 329,
            "key.name" : "git_ls",
            "key.namelength" : 6,
            "key.nameoffset" : 890,
            "key.offset" : 879,
            "key.parsed_declaration" : "public static var git_ls: [String]",
            "key.parsed_scope.end" : 32,
            "key.parsed_scope.start" : 20,
            "key.typename" : "[String]",
            "key.typeusr" : "$sSaySSGD",
            "key.usr" : "s:8ShellKit0A0C6git_lsSaySSGvpZ"
          },
          {
            "key.annotated_decl" : "<Declaration>let arguments: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/git-commands.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>arguments<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 28,
            "key.name" : "arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 917,
            "key.offset" : 913,
            "key.parsed_declaration" : "let arguments = [\"ls-files\"]",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 21,
            "key.typename" : "[String]",
            "key.typeusr" : "$sSaySSGD",
            "key.usr" : "s:8ShellKit0A0C6git_lsSaySSGvgZ9argumentsL_AEvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var git_ls_modified: [<Type usr=\"s:SS\">String<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1212
              }
            ],
            "key.bodylength" : 313,
            "key.bodyoffset" : 1257,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/git-commands.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>git_ls_modified<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 352,
            "key.name" : "git_ls_modified",
            "key.namelength" : 15,
            "key.nameoffset" : 1230,
            "key.offset" : 1219,
            "key.parsed_declaration" : "public static var git_ls_modified: [String]",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 34,
            "key.typename" : "[String]",
            "key.typeusr" : "$sSaySSGD",
            "key.usr" : "s:8ShellKit0A0C15git_ls_modifiedSaySSGvpZ"
          },
          {
            "key.annotated_decl" : "<Declaration>let arguments: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/git-commands.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>arguments<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 42,
            "key.name" : "arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 1266,
            "key.offset" : 1262,
            "key.parsed_declaration" : "let arguments = [\"ls-files\", \"--modified\"]",
            "key.parsed_scope.end" : 35,
            "key.parsed_scope.start" : 35,
            "key.typename" : "[String]",
            "key.typeusr" : "$sSaySSGD",
            "key.usr" : "s:8ShellKit0A0C15git_ls_modifiedSaySSGvgZ9argumentsL_AEvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public static var git_ls_untracked: [<Type usr=\"s:SS\">String<\/Type>] { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length": 6,
                "key.offset" : 1575
              }
            ],
            "key.bodylength" : 333,
            "key.bodyoffset" : 1621,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/git-commands.swift",
            "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>git_ls_untracked<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
            "key.kind" : "source.lang.swift.decl.var.static",
            "key.length" : 373,
            "key.name" : "git_ls_untracked",
            "key.namelength" : 16,
            "key.nameoffset" : 1593,
            "key.offset" : 1582,
            "key.parsed_declaration" : "public static var git_ls_untracked: [String]",
            "key.parsed_scope.end" : 60,
            "key.parsed_scope.start" : 48,
            "key.typename" : "[String]",
            "key.typeusr" : "$sSaySSGD",
            "key.usr" : "s:8ShellKit0A0C16git_ls_untrackedSaySSGvpZ"
          },
          {
            "key.annotated_decl" : "<Declaration>let arguments: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/git-commands.swift",
            "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>arguments<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
            "key.kind" : "source.lang.swift.decl.var.local",
            "key.length" : 62,
            "key.name" : "arguments",
            "key.namelength" : 9,
            "key.nameoffset" : 1630,
            "key.offset" : 1626,
            "key.parsed_declaration" : "let arguments = [\"ls-files\", \"--others\", \"--exclude-standard\"]",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.typename" : "[String]",
            "key.typeusr" : "$sSaySSGD",
            "key.usr" : "s:8ShellKit0A0C16git_ls_untrackedSaySSGvgZ9argumentsL_AEvp"
          }
        ],
        "key.typename" : "Shell.Type",
        "key.typeusr" : "$s8ShellKit0A0CmD",
        "key.usr" : "s:8ShellKit0A0C"
      }
    ]
  }
}, {
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 2368,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public class Shell<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 108
          }
        ],
        "key.bodylength" : 388,
        "key.bodyoffset" : 152,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Shell<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 406,
        "key.name" : "Shell",
        "key.namelength" : 5,
        "key.nameoffset" : 145,
        "key.offset" : 135,
        "key.parsed_declaration" : "extension Shell",
        "key.parsed_scope.end" : 25,
        "key.parsed_scope.start" : 11,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public struct Path<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 155
              }
            ],
            "key.bodylength" : 363,
            "key.bodyoffset" : 175,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Path<\/decl.name><\/decl.struct>",
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 377,
            "key.name" : "Path",
            "key.namelength" : 4,
            "key.nameoffset" : 169,
            "key.offset" : 162,
            "key.parsed_declaration" : "public struct Path",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 12,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static var cwd: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 180
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
                "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>cwd<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                "key.kind" : "source.lang.swift.decl.var.static",
                "key.length" : 57,
                "key.name" : "cwd",
                "key.namelength" : 3,
                "key.nameoffset" : 198,
                "key.offset" : 187,
                "key.parsed_declaration" : "public static var cwd = FileManager.default.currentDirectoryPath",
                "key.parsed_scope.end" : 13,
                "key.parsed_scope.start" : 13,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:8ShellKit0A0C4PathV3cwdSSvpZ"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public static let shellKitSourcePath: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 250
                  }
                ],
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
                "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>shellKitSourcePath<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.static>",
                "key.kind" : "source.lang.swift.decl.var.static",
                "key.length" : 278,
                "key.name" : "shellKitSourcePath",
                "key.namelength" : 18,
                "key.nameoffset" : 268,
                "key.offset" : 257,
                "key.parsed_declaration" : "public static let shellKitSourcePath = {\n  String(\n    URL(fileURLWithPath: #file)\n      .deletingLastPathComponent() \/\/ remove file\n      .deletingLastPathComponent() \/\/ remove Source\n      .deletingLastPathComponent() \/\/\n      .withoutScheme()\n  )\n}()",
                "key.parsed_scope.end" : 15,
                "key.parsed_scope.start" : 15,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:8ShellKit0A0C4PathV05shellb6SourceC0SSvpZ"
              }
            ],
            "key.typename" : "Shell.Path.Type",
            "key.typeusr" : "$s8ShellKit0A0C4PathVmD",
            "key.usr" : "s:8ShellKit0A0C4PathV"
          }
        ],
        "key.typename" : "Shell.Type",
        "key.typeusr" : "$s8ShellKit0A0CmD",
        "key.usr" : "s:8ShellKit0A0C"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>struct URL : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/Type>, <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 543
          }
        ],
        "key.bodylength" : 184,
        "key.bodyoffset" : 565,
        "key.doc.declaration" : "struct URL : ReferenceConvertible, Equatable",
        "key.doc.discussion" : [
          {
            "Para" : "You can construct URLs and access their parts. For URLs that represent local files, you can also manipulate properties of those files directly, such as changing the file’s last modification date. Finally, you can pass URLs to other APIs to retrieve the contents of those URLs. For example, you can use the URLSession classes to access the contents of remote resources, as described in URL Session Programming Guide."
          },
          {
            "Para" : "URLs are the preferred way to refer to local files. Most objects that read data from or write data to a file have methods that accept a URL instead of a pathname as the file reference. For example, you can get the contents of a local file URL as `String` by calling `func init(contentsOf:encoding) throws`, or as a `Data` by calling `func init(contentsOf:options) throws`."
          }
        ],
        "key.doc.full_as_xml" : "<Class><Name>URL<\/Name><USR>s:10Foundation3URLV<\/USR><Declaration>struct URL : ReferenceConvertible, Equatable<\/Declaration><CommentParts><Abstract><Para>A URL is a type that can potentially contain the location of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data.<\/Para><\/Abstract><Discussion><Para>You can construct URLs and access their parts. For URLs that represent local files, you can also manipulate properties of those files directly, such as changing the file’s last modification date. Finally, you can pass URLs to other APIs to retrieve the contents of those URLs. For example, you can use the URLSession classes to access the contents of remote resources, as described in URL Session Programming Guide.<\/Para><Para>URLs are the preferred way to refer to local files. Most objects that read data from or write data to a file have methods that accept a URL instead of a pathname as the file reference. For example, you can get the contents of a local file URL as <codeVoice>String<\/codeVoice> by calling <codeVoice>func init(contentsOf:encoding) throws<\/codeVoice>, or as a <codeVoice>Data<\/codeVoice> by calling <codeVoice>func init(contentsOf:options) throws<\/codeVoice>.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.name" : "URL",
        "key.doc.type" : "Class",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>URL<\/decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible<\/ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.struct>",
        "key.is_system" : true,
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 200,
        "key.modulename" : "Foundation",
        "key.name" : "URL",
        "key.namelength" : 3,
        "key.nameoffset" : 560,
        "key.offset" : 550,
        "key.parsed_declaration" : "public extension URL",
        "key.parsed_scope.end" : 37,
        "key.parsed_scope.start" : 27,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func withoutScheme() -&gt; <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
            "key.bodylength" : 147,
            "key.bodyoffset" : 600,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>withoutScheme<\/decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 180,
            "key.name" : "withoutScheme()",
            "key.namelength" : 15,
            "key.nameoffset" : 573,
            "key.offset" : 568,
            "key.parsed_declaration" : "func withoutScheme() -> String",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 28,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let urlWithoutScheme: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>urlWithoutScheme<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 110,
                "key.name" : "urlWithoutScheme",
                "key.namelength" : 16,
                "key.nameoffset" : 609,
                "key.offset" : 605,
                "key.parsed_declaration" : "let urlWithoutScheme = String(\n  pathComponents\n    .joined(separator: \"\/\")\n    .dropFirst()\n)",
                "key.parsed_scope.end" : 29,
                "key.parsed_scope.start" : 29,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:10Foundation3URLV8ShellKitE13withoutSchemeSSyF010urlWithoutF0L_SSvp"
              }
            ],
            "key.typename" : "(URL) -> () -> String",
            "key.typeusr" : "$sSSycD",
            "key.usr" : "s:10Foundation3URLV8ShellKitE13withoutSchemeSSyF"
          }
        ],
        "key.typename" : "URL.Type",
        "key.typeusr" : "$s10Foundation3URLVmD",
        "key.usr" : "s:10Foundation3URLV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public class Shell<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 752
          }
        ],
        "key.bodylength" : 1570,
        "key.bodyoffset" : 796,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Shell<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1588,
        "key.name" : "Shell",
        "key.namelength" : 5,
        "key.nameoffset" : 789,
        "key.offset" : 779,
        "key.parsed_declaration" : "extension Shell",
        "key.parsed_scope.end" : 74,
        "key.parsed_scope.start" : 40,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func echo(_ words: @autoclosure () -&gt; <Type usr=\"s:SS\">String<\/Type>, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .info) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 820
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 799
              }
            ],
            "key.bodylength" : 90,
            "key.bodyoffset" : 932,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>echo<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>words<\/decl.var.parameter.name>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@autoclosure<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> () -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .info<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 196,
            "key.name" : "echo(_:logLevel:)",
            "key.namelength" : 68,
            "key.nameoffset" : 839,
            "key.offset" : 827,
            "key.parsed_declaration" : "public static func echo(_ words: @autoclosure () -> String, logLevel: LogLevel = .info) throws -> Shell.Result",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 42,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> (@autoclosure () -> String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s_8logLevel8ShellKit0C0C6ResultVSSyXK_AD8ReporterC0B0OtKcD",
            "key.usr" : "s:8ShellKit0A0C4echo_8logLevelAC6ResultVSSyXK_AC8ReporterC0E0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func exists(at path: <Type usr=\"s:SS\">String<\/Type>, with workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .off) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1048
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1027
              }
            ],
            "key.bodylength" : 157,
            "key.bodyoffset" : 1175,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>exists<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>workingDirectory<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .off<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 278,
            "key.name" : "exists(at:with:logLevel:)",
            "key.namelength" : 98,
            "key.nameoffset" : 1067,
            "key.offset" : 1055,
            "key.parsed_declaration" : "public static func exists(at path: String, with workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .off) -> Bool",
            "key.parsed_scope.end" : 51,
            "key.parsed_scope.start" : 47,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let fullPath: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>fullPath<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 69,
                "key.name" : "fullPath",
                "key.namelength" : 8,
                "key.nameoffset" : 1184,
                "key.offset" : 1180,
                "key.parsed_declaration" : "let fullPath = path.isAbsolute ? path : workingDirectory + \"\/\\(path)\"",
                "key.parsed_scope.end" : 48,
                "key.parsed_scope.start" : 48,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:8ShellKit0A0C6exists2at4with8logLevelSbSS_SSAC8ReporterC0G0OtFZ8fullPathL_SSvp"
              }
            ],
            "key.typename" : "(Shell.Type) -> (String, String, Shell.Reporter.Level) -> Bool",
            "key.typeusr" : "$s2at4with8logLevelSbSS_SS8ShellKit0E0C8ReporterC0D0OtcD",
            "key.usr" : "s:8ShellKit0A0C6exists2at4with8logLevelSbSS_SSAC8ReporterC0G0OtFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func mkdir(at path: <Type usr=\"s:SS\">String<\/Type>, from workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .off) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {"key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1358
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1337
              }
            ],
            "key.bodylength" : 104,
            "key.bodyoffset" : 1499,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>mkdir<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>path<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>workingDirectory<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .off<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 239,
            "key.name" : "mkdir(at:from:logLevel:)",
            "key.namelength" : 97,
            "key.nameoffset" : 1377,
            "key.offset" : 1365,
            "key.parsed_declaration" : "public static func mkdir(at path: String, from workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .off) throws -> Shell.Result",
            "key.parsed_scope.end" : 56,
            "key.parsed_scope.start" : 54,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> (String, String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s2at4from8logLevel8ShellKit0E0C6ResultVSS_SSAF8ReporterC0D0OtKcD",
            "key.usr" : "s:8ShellKit0A0C5mkdir2at4from8logLevelAC6ResultVSS_SSAC8ReporterC0G0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func rm(_ resource: <Type usr=\"s:SS\">String<\/Type>, directory: <Type usr=\"s:Sb\">Bool<\/Type> = false, force: <Type usr=\"s:Sb\">Bool<\/Type> = false, from workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .off) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1629
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1608
              }
            ],
            "key.bodylength" : 228,
            "key.bodyoffset" : 1816,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>rm<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>resource<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>directory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>force<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = false<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>from<\/decl.var.parameter.argument_label> <decl.var.parameter.name>workingDirectory<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .off<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 409,
            "key.name" : "rm(_:directory:force:from:logLevel:)",
            "key.namelength" : 143,
            "key.nameoffset" : 1648,
            "key.offset" : 1636,
            "key.parsed_declaration" : "public static func rm(_ resource: String, directory: Bool = false, force: Bool = false, from workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .off) throws -> Shell.Result",
            "key.parsed_scope.end" : 68,
            "key.parsed_scope.start" : 59,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>var args: [<Type usr=\"s:SS\">String<\/Type>]<\/Declaration>",
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>args<\/decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String<\/ref.struct>]<\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 23,
                "key.name" : "args",
                "key.namelength" : 4,
                "key.nameoffset" : 1825,
                "key.offset" : 1821,
                "key.parsed_declaration" : "var args: [String] = []",
                "key.parsed_scope.end" : 60,
                "key.parsed_scope.start" : 60,
                "key.typename" : "[String]",
                "key.typeusr" : "$sSaySSGD",
                "key.usr" : "s:8ShellKit0A0C2rm_9directory5force4from8logLevelAC6ResultVSS_S2bSSAC8ReporterC0H0OtKFZ4argsL_SaySSGvp"
              }
            ],
            "key.typename" : "(Shell.Type) -> (String, Bool, Bool, String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s_9directory5force4from8logLevel8ShellKit0F0C6ResultVSS_S2bSSAG8ReporterC0E0OtKcD",
            "key.usr" : "s:8ShellKit0A0C2rm_9directory5force4from8logLevelAC6ResultVSS_S2bSSAC8ReporterC0H0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func copy(source: <Type usr=\"s:SS\">String<\/Type>, destination: <Type usr=\"s:SS\">String<\/Type>, at workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .off) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2070
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2049
              }
            ],
            "key.bodylength" : 136,
            "key.bodyoffset" : 2228,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/shell-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>copy<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>source<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>destination<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>at<\/decl.var.parameter.argument_label> <decl.var.parameter.name>workingDirectory<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .off<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 288,
            "key.name" : "copy(source:destination:at:logLevel:)",
            "key.namelength" : 114,
            "key.nameoffset" : 2089,
            "key.offset" : 2077,
            "key.parsed_declaration" : "public static func copy(source: String, destination: String, at workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .off) throws -> Shell.Result",
            "key.parsed_scope.end" : 73,
            "key.parsed_scope.start" : 71,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> (String, String, String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s6source11destination2at8logLevel8ShellKit0F0C6ResultVSS_S2SAG8ReporterC0E0OtKcD",
            "key.usr" : "s:8ShellKit0A0C4copy6source11destination2at8logLevelAC6ResultVSS_S2SAC8ReporterC0H0OtKFZ"
          }
        ],
        "key.typename" : "Shell.Type",
        "key.typeusr" : "$s8ShellKit0A0CmD",
        "key.usr" : "s:8ShellKit0A0C"
      }
    ]
  }
}, {
  "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3145,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.internal",
        "key.annotated_decl" : "<Declaration>public class Shell<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.available",
            "key.length" : 26,
            "key.offset" : 126
          }
        ],
        "key.bodylength" : 2973,
        "key.bodyoffset" : 170,
        "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/Shell.swift",
        "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>Shell<\/decl.name><\/decl.class>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 2991,
        "key.name" : "Shell",
        "key.namelength" : 5,
        "key.nameoffset" : 163,
        "key.offset" : 153,
        "key.parsed_declaration" : "extension Shell",
        "key.parsed_scope.end" : 63,
        "key.parsed_scope.start" : 12,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func swiftBuild(using name: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C4NameO\">Name<\/Type> = .sh, arguments: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV9Argumentsa\">Arguments<\/Type> = [], environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type> = [:], workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .info) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 194
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 173
              }
            ],
            "key.bodylength" : 165,
            "key.bodyoffset" : 424,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>swiftBuild<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>name<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.enum usr=\"s:8ShellKit0A0C4NameO\">Name<\/ref.enum><\/decl.var.parameter.type> = .sh<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>arguments<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV9Argumentsa\">Arguments<\/ref.typealias><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workingDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .info<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 389,
            "key.name" : "swiftBuild(using:arguments:environment:workingDirectory:logLevel:)",
            "key.namelength" : 186,
            "key.nameoffset" : 213,
            "key.offset" : 201,
            "key.parsed_declaration" : "public static func swiftBuild(using name: Shell.Name = .sh, arguments: Command.Arguments = [], environment: Command.Environment = [:], workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .info) throws -> Shell.Result",
            "key.parsed_scope.end" : 16,
            "key.parsed_scope.start" : 14,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> (Shell.Name, [String], [String : String], String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s5using9arguments11environment16workingDirectory8logLevel8ShellKit0H0C6ResultVAH4NameO_SaySSGSDyS2SGSSAH8ReporterC0G0OtKcD",
            "key.usr" : "s:8ShellKit0A0C10swiftBuild5using9arguments11environment16workingDirectory8logLevelAC6ResultVAC4NameO_SaySSGSDyS2SGSSAC8ReporterC0K0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func swiftTest(using name: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C4NameO\">Name<\/Type> = .sh, arguments: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV9Argumentsa\">Arguments<\/Type> = [], environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type> = [:], workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .info) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 615
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 594
              }
            ],
            "key.bodylength" : 164,
            "key.bodyoffset" : 844,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>swiftTest<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>using<\/decl.var.parameter.argument_label> <decl.var.parameter.name>name<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.enum usr=\"s:8ShellKit0A0C4NameO\">Name<\/ref.enum><\/decl.var.parameter.type> = .sh<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>arguments<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV9Argumentsa\">Arguments<\/ref.typealias><\/decl.var.parameter.type> = []<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workingDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .info<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 387,
            "key.name" : "swiftTest(using:arguments:environment:workingDirectory:logLevel:)",
            "key.namelength" : 185,
            "key.nameoffset" : 634,
            "key.offset" : 622,
            "key.parsed_declaration" : "public static func swiftTest(using name: Shell.Name = .sh, arguments: Command.Arguments = [], environment: Command.Environment = [:], workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .info) throws -> Shell.Result",
            "key.parsed_scope.end" : 21,
            "key.parsed_scope.start" : 19,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> (Shell.Name, [String], [String : String], String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s5using9arguments11environment16workingDirectory8logLevel8ShellKit0H0C6ResultVAH4NameO_SaySSGSDyS2SGSSAH8ReporterC0G0OtKcD",
            "key.usr" : "s:8ShellKit0A0C9swiftTest5using9arguments11environment16workingDirectory8logLevelAC6ResultVAC4NameO_SaySSGSDyS2SGSSAC8ReporterC0K0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func swiftTestGenerateLinuxMain(environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type> = [:], workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .info) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1034
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1013
              }
            ],
            "key.bodylength" : 176,
            "key.bodyoffset" : 1215,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>swiftTestGenerateLinuxMain<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workingDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .info<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 351,
            "key.name" : "swiftTestGenerateLinuxMain(environment:workingDirectory:logLevel:)",
            "key.namelength" : 137,
            "key.nameoffset" : 1053,
            "key.offset" : 1041,
            "key.parsed_declaration" : "public static func swiftTestGenerateLinuxMain(environment: Command.Environment = [:], workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .info) throws -> Shell.Result",
            "key.parsed_scope.end" : 26,
            "key.parsed_scope.start" : 24,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> ([String : String], String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s11environment16workingDirectory8logLevel8ShellKit0F0C6ResultVSDyS2SG_SSAF8ReporterC0E0OtKcD",
            "key.usr" : "s:8ShellKit0A0C26swiftTestGenerateLinuxMain11environment16workingDirectory8logLevelAC6ResultVSDyS2SG_SSAC8ReporterC0L0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func swiftlint(environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type> = [:], workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .off) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1419
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1398
              }
            ],
            "key.bodylength" : 156,
            "key.bodyoffset" : 1582,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>swiftlint<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workingDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .off<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 313,
            "key.name" : "swiftlint(environment:workingDirectory:logLevel:)",
            "key.namelength" : 119,
            "key.nameoffset" : 1438,
            "key.offset" : 1426,
            "key.parsed_declaration" : "public static func swiftlint(environment: Command.Environment = [:], workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .off) throws -> Shell.Result",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 29,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> ([String : String], String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s11environment16workingDirectory8logLevel8ShellKit0F0C6ResultVSDyS2SG_SSAF8ReporterC0E0OtKcD",
            "key.usr" : "s:8ShellKit0A0C9swiftlint11environment16workingDirectory8logLevelAC6ResultVSDyS2SG_SSAC8ReporterC0H0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func swiftFormat(version: <Type usr=\"s:SS\">String<\/Type>, environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type> = [:], workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .info) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1764
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 1743
              }
            ],
            "key.bodylength" : 195,
            "key.bodyoffset" : 1947,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>swiftFormat<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>version<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workingDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .info<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 372,
            "key.name" : "swiftFormat(version:environment:workingDirectory:logLevel:)",
            "key.namelength" : 139,
            "key.nameoffset" : 1783,
            "key.offset" : 1771,
            "key.parsed_declaration" : "public static func swiftFormat(version: String, environment: Command.Environment = [:], workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .info) throws -> Shell.Result",
            "key.parsed_scope.end" : 36,
            "key.parsed_scope.start" : 34,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> (String, [String : String], String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s7version11environment16workingDirectory8logLevel8ShellKit0G0C6ResultVSS_SDyS2SGSSAG8ReporterC0F0OtKcD",
            "key.usr" : "s:8ShellKit0A0C11swiftFormat7version11environment16workingDirectory8logLevelAC6ResultVSS_SDyS2SGSSAC8ReporterC0J0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func sourceKittenSPM(destination: <Type usr=\"s:SS\">String<\/Type>, environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type> = [:], workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .off) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2168
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2147
              }
            ],
            "key.bodylength" : 467,
            "key.bodyoffset" : 2358,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>sourceKittenSPM<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>destination<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workingDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .off<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 651,
            "key.name" : "sourceKittenSPM(destination:environment:workingDirectory:logLevel:)",
            "key.namelength" : 146,
            "key.nameoffset" : 2187,
            "key.offset" : 2175,
            "key.parsed_declaration" : "public static func sourceKittenSPM(destination: String, environment: Command.Environment = [:], workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .off) throws -> Shell.Result",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 39,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let command: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>command<\/decl.name>: <decl.var.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 190,
                "key.name" : "command",
                "key.namelength" : 7,
                "key.nameoffset" : 2367,
                "key.offset" : 2363,
                "key.parsed_declaration" : "let command = Command(\n  name: \"sourcekitten\",\n  arguments: [\"doc\", \"--spm\"],\n  environment: environment,\n  workingDirectory: workingDirectory,\n  logLevel: logLevel\n)",
                "key.parsed_scope.end" : 40,
                "key.parsed_scope.start" : 40,
                "key.typename" : "Command",
                "key.typeusr" : "$s8ShellKit7CommandVD",
                "key.usr" : "s:8ShellKit0A0C15sourceKittenSPM11destination11environment16workingDirectory8logLevelAC6ResultVSS_SDyS2SGSSAC8ReporterC0K0OtKFZ7commandL_AA7CommandVvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let result: <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>result<\/decl.name>: <decl.var.type><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 39,
                "key.name" : "result",
                "key.namelength" : 6,
                "key.nameoffset" : 2563,
                "key.offset" : 2559,
                "key.parsed_declaration" : "let result = try Shell.execute(command)",
                "key.parsed_scope.end" : 48,
                "key.parsed_scope.start" : 48,
                "key.typename" : "Shell.Result",
                "key.typeusr" : "$s8ShellKit0A0C6ResultVD",
                "key.usr" : "s:8ShellKit0A0C15sourceKittenSPM11destination11environment16workingDirectory8logLevelAC6ResultVSS_SDyS2SGSSAC8ReporterC0K0OtKFZ6resultL_AJvp"},
              {
                "key.annotated_decl" : "<Declaration>let path: <Type usr=\"s:SS\">String<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>path<\/decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 86,
                "key.name" : "path",
                "key.namelength" : 4,
                "key.nameoffset" : 2608,
                "key.offset" : 2604,
                "key.parsed_declaration" : "let path = destination.isAbsolute ? destination : workingDirectory + \"\/\\(destination)\"",
                "key.parsed_scope.end" : 50,
                "key.parsed_scope.start" : 50,
                "key.typename" : "String",
                "key.typeusr" : "$sSSD",
                "key.usr" : "s:8ShellKit0A0C15sourceKittenSPM11destination11environment16workingDirectory8logLevelAC6ResultVSS_SDyS2SGSSAC8ReporterC0K0OtKFZ4pathL_SSvp"
              },
              {
                "key.annotated_decl" : "<Declaration>let url: <Type usr=\"s:10Foundation3URLV\">URL<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>url<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation3URLV\">URL<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 36,
                "key.name" : "url",
                "key.namelength" : 3,
                "key.nameoffset" : 2700,
                "key.offset" : 2696,
                "key.parsed_declaration" : "let url = URL(fileURLWithPath: path)",
                "key.parsed_scope.end" : 52,
                "key.parsed_scope.start" : 52,
                "key.typename" : "URL",
                "key.typeusr" : "$s10Foundation3URLVD",
                "key.usr" : "s:8ShellKit0A0C15sourceKittenSPM11destination11environment16workingDirectory8logLevelAC6ResultVSS_SDyS2SGSSAC8ReporterC0K0OtKFZ3urlL_10Foundation3URLVvp"
              }
            ],
            "key.typename" : "(Shell.Type) -> (String, [String : String], String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s11destination11environment16workingDirectory8logLevel8ShellKit0G0C6ResultVSS_SDyS2SGSSAG8ReporterC0F0OtKcD",
            "key.usr" : "s:8ShellKit0A0C15sourceKittenSPM11destination11environment16workingDirectory8logLevelAC6ResultVSS_SDyS2SGSSAC8ReporterC0K0OtKFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>@discardableResult public static func jazzy(environment: <Type usr=\"s:8ShellKit7CommandV\">Command<\/Type>.<Type usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/Type> = [:], workingDirectory: <Type usr=\"s:SS\">String<\/Type> = Shell.Path.cwd, logLevel: <Type usr=\"s:8ShellKit8LogLevela\">LogLevel<\/Type> = .off) throws -&gt; <Type usr=\"s:8ShellKit0A0C\">Shell<\/Type>.<Type usr=\"s:8ShellKit0A0C6ResultV\">Result<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2851
              },
              {
                "key.attribute" : "source.decl.attribute.discardableResult",
                "key.length" : 18,
                "key.offset" : 2830
              }
            ],
            "key.bodylength" : 131,
            "key.bodyoffset" : 3010,
            "key.filepath" : "\/Users\/cavellebenjamin\/Development\/toolbox\/ShellKit\/Sources\/ShellKit\/swift-commands.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>jazzy<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:8ShellKit7CommandV\">Command<\/ref.struct>.<ref.typealias usr=\"s:8ShellKit7CommandV11Environmenta\">Environment<\/ref.typealias><\/decl.var.parameter.type> = [:]<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>workingDirectory<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String<\/ref.struct><\/decl.var.parameter.type> = Shell.Path.cwd<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>logLevel<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:8ShellKit8LogLevela\">LogLevel<\/ref.typealias><\/decl.var.parameter.type> = .off<\/decl.var.parameter>) <syntaxtype.keyword>throws<\/syntaxtype.keyword> -&gt; <decl.function.returntype><ref.class usr=\"s:8ShellKit0A0C\">Shell<\/ref.class>.<ref.struct usr=\"s:8ShellKit0A0C6ResultV\">Result<\/ref.struct><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 284,
            "key.name" : "jazzy(environment:workingDirectory:logLevel:)",
            "key.namelength" : 115,
            "key.nameoffset" : 2870,
            "key.offset" : 2858,
            "key.parsed_declaration" : "public static func jazzy(environment: Command.Environment = [:], workingDirectory: String = Shell.Path.cwd, logLevel: LogLevel = .off) throws -> Shell.Result",
            "key.parsed_scope.end" : 62,
            "key.parsed_scope.start" : 60,
            "key.substructure" : [

            ],
            "key.typename" : "(Shell.Type) -> ([String : String], String, Shell.Reporter.Level) throws -> Shell.Result",
            "key.typeusr" : "$s11environment16workingDirectory8logLevel8ShellKit0F0C6ResultVSDyS2SG_SSAF8ReporterC0E0OtKcD",
            "key.usr" : "s:8ShellKit0A0C5jazzy11environment16workingDirectory8logLevelAC6ResultVSDyS2SG_SSAC8ReporterC0H0OtKFZ"
          }
        ],
        "key.typename" : "Shell.Type",
        "key.typeusr" : "$s8ShellKit0A0CmD",
        "key.usr" : "s:8ShellKit0A0C"
      }
    ]
  }
}]